<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Bilibili Android客户端播放API数据包解析</title>
    <url>/2019/06/11/Bilibili-Android%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%92%AD%E6%94%BE%E6%95%B0%E6%8D%AE%E5%8C%85%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>博客也很久没水了，从日更周更到N月更，不知道写一些什么好…<br>这次是Bilibili客户端播放API的一个加解密算法，也折腾了我一段时间，<br>东西写好很久了，一直懒就没写…</p>
<h2 id="BiliBili"><a href="#BiliBili" class="headerlink" title="BiliBili"></a>BiliBili</h2><p>如果研究的朋友，可能都抓过包看过数据包的情况<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2019/06/11/5cff637b8507292616.png"
                     
                ></p>
<p>如图所示，播放计数的API，以及请求头、请求体、返回值  </p>
<blockquote>
<p>API: <code>https://api.bilibili.com/x/report/click/android2</code>  </p>
</blockquote>
<p>请求头的数据还是比较正常，但是看到请求体部分，瞬间懵圈了<br>是一片乱码字符串，看了整个播放过程的API，只有这个是加密乱码的<br>如果不是某段时间出现的代码，我也不知道这个是什么算法。</p>
<h2 id="加解密必要秘钥等"><a href="#加解密必要秘钥等" class="headerlink" title="加解密必要秘钥等"></a>加解密必要秘钥等</h2><table>
<thead>
<tr>
<th>NAME</th>
<th>VALUE</th>
<th>TYPE</th>
<th>DESCRIBE</th>
</tr>
</thead>
<tbody><tr>
<td>AES_KEY</td>
<td>fd6b639dbcff0c2a1b03b389ec763c4b</td>
<td>string</td>
<td>null</td>
</tr>
<tr>
<td>AES_IV</td>
<td>77b07a672d57d64c</td>
<td>string</td>
<td>null</td>
</tr>
<tr>
<td>SHA256_SALT</td>
<td>9cafa6466a028bfb</td>
<td>string</td>
<td>null</td>
</tr>
</tbody></table>
<p>这只适用于安卓客户端，和ios客户端等是不通用的</p>
<h2 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h2><p>解密，主要是为了解出请求参数有些什么，就不贴太多代码在博客上了  </p>
<p>解密过程主要就是一个AES解密，暂时用不到Sha256 salt  </p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2019/06/11/5cff66f696a6520760.png"
                     
                ></p>
<p>图中红框内黑色部分数据就是加密的请求体，下面我们来解密参数  </p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2019/06/11/5cff69a19bcb599401.png"
                     
                ></p>
<p>黑色部分数据<code>Copy as Base64</code>(因为我的解密代码是基于Base64的)  </p>
<p>拆分出来的一部分加解密代码放到了Github<br><a class="link"   href="https://github.com/lkeme/Enc2Dec/tree/master/Bilibili" >哔哩哔哩-App客户端播放参数加解密 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>解密部分我就不多说了，秘钥等都贴出来了，能折腾的就慢慢折腾<br>我就直接直接贴出解出来的参数，参数比较多  </p>
<p><strong>这是登陆后的播放参数</strong></p>
<table>
<thead>
<tr>
<th>NAME</th>
<th>VALUE</th>
<th>DESCRIBE</th>
</tr>
</thead>
<tbody><tr>
<td>access_key</td>
<td>f3ae492*****0c51</td>
<td>null</td>
</tr>
<tr>
<td>aid</td>
<td>123456</td>
<td>null</td>
</tr>
<tr>
<td>auto_play</td>
<td>0</td>
<td>可为0-2</td>
</tr>
<tr>
<td>cid</td>
<td>654321</td>
<td>null</td>
</tr>
<tr>
<td>did</td>
<td>BT******4a</td>
<td>和设备相关</td>
</tr>
<tr>
<td>epid</td>
<td>0</td>
<td>null</td>
</tr>
<tr>
<td>ftime</td>
<td>1558340481</td>
<td>null</td>
</tr>
<tr>
<td>lv</td>
<td>4</td>
<td>null</td>
</tr>
<tr>
<td>mid</td>
<td>1234</td>
<td>null</td>
</tr>
<tr>
<td>part</td>
<td>1</td>
<td>分P</td>
</tr>
<tr>
<td>sid</td>
<td>0</td>
<td>null</td>
</tr>
<tr>
<td>stime</td>
<td>1558416933</td>
<td>null</td>
</tr>
<tr>
<td>sub_type</td>
<td>0</td>
<td>null</td>
</tr>
<tr>
<td>type</td>
<td>3</td>
<td>null</td>
</tr>
<tr>
<td>sign</td>
<td>22bb3******cdb01b9</td>
<td>sha256加密</td>
</tr>
</tbody></table>
<p><strong>这是不登陆的播放参数</strong></p>
<table>
<thead>
<tr>
<th>NAME</th>
<th>VALUE</th>
<th>DESCRIBE</th>
</tr>
</thead>
<tbody><tr>
<td>aid</td>
<td>123456</td>
<td>null</td>
</tr>
<tr>
<td>cid</td>
<td>654321</td>
<td>null</td>
</tr>
<tr>
<td>did</td>
<td>BT****4a</td>
<td>和设备相关</td>
</tr>
<tr>
<td>ftime</td>
<td>1558416933</td>
<td>null</td>
</tr>
<tr>
<td>lv</td>
<td>0</td>
<td>null</td>
</tr>
<tr>
<td>mid</td>
<td>null</td>
<td>值为空</td>
</tr>
<tr>
<td>part</td>
<td>1</td>
<td>分P</td>
</tr>
<tr>
<td>stime</td>
<td>1558416933</td>
<td>null</td>
</tr>
</tbody></table>
<blockquote>
<p>设备、版本不同可能存在参数差异  </p>
</blockquote>
<h2 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h2><p>大概的加密过程</p>
<blockquote>
<p>AES加密( 参数排序(para) + Sha256Hash+salt加密(sign) )  </p>
</blockquote>
<p>我就贴一下一部分代码，知道怎么用就好了  </p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;aid&#x27;</span>: <span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;cid&#x27;</span>: <span class="string">&#x27;654321&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;did&#x27;</span>: <span class="string">&#x27;string&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;ftime&#x27;</span>: <span class="string">&#x27;112233&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;lv&#x27;</span>: <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;mid&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;part&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;stime&#x27;</span>: <span class="string">&#x27;112233&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">temp_data = urlencode(data)</span><br><span class="line"><span class="built_in">print</span>(temp_data)</span><br><span class="line"><span class="comment"># aid=123456&amp;cid=654********=&amp;part=1&amp;stime=112233</span></span><br><span class="line">payload = aes_enc(<span class="string">f&quot;<span class="subst">&#123;temp_data&#125;</span>&amp;sign=<span class="subst">&#123;hashlib_sha256(temp_data)&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(payload)</span><br><span class="line"><span class="comment"># b&#x27;\xb2\x8a%\xef\xc0\x18******************0&#x27;</span></span><br></pre></td></tr></table></figure></div>

<p>代码环境Python3，参数随便写的，还是得按照你自己的解密参数来<br>贴出来的代码只是一部分，基于github上的代码  </p>
<h2 id="SHA256-HASH-SALT"><a href="#SHA256-HASH-SALT" class="headerlink" title="SHA256 HASH SALT"></a>SHA256 HASH SALT</h2><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">hashlib_sha256</span>(<span class="params">data, salt=<span class="string">&#x27;9cafa6466a028bfb&#x27;</span></span>):</span><br><span class="line">    data = <span class="built_in">bytes</span>(data, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    salt = <span class="built_in">bytes</span>(salt, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="built_in">hash</span> = hashlib.sha256(data)</span><br><span class="line">    <span class="built_in">hash</span>.update(salt)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">hash</span>.hexdigest()</span><br></pre></td></tr></table></figure></div>


<h2 id="AES-ENC-DEC"><a href="#AES-ENC-DEC" class="headerlink" title="AES ENC DEC"></a>AES ENC DEC</h2><p>AES的就不贴了，有点长，可以自己去看</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>文章写的比较乱不全，只会贴出加解密部分，剩下的东西自己分析了<br>该文章代码只为学习，麻烦未经允许禁止转载哦<br>最后再贴一遍仓库地址 <a class="link"   href="https://github.com/lkeme/Enc2Dec/tree/master/Bilibili" >哔哩哔哩-App客户端播放参数加解密 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>靠别人写全部代码，不太可能，大家都是鸽子，咕咕咕！</p>
<p>END.</p>
]]></content>
      <categories>
        <category>Bilibili</category>
      </categories>
      <tags>
        <tag>Bilibili</tag>
        <tag>Watch</tag>
        <tag>Android</tag>
        <tag>AES</tag>
        <tag>SHA256</tag>
      </tags>
  </entry>
  <entry>
    <title>Bilibili Android的Sign算法</title>
    <url>/2018/03/21/Bilibili-Android%E7%9A%84Sign%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Bilibili客户端API的Sign验证算法</p>
<h2 id="BiliBili"><a href="#BiliBili" class="headerlink" title="BiliBili"></a>BiliBili</h2><p>sign的拼接</p>
<blockquote>
<p>md5加密( 参数排序(para) + App内置(appsecret) )</p>
</blockquote>
<h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><p>按key排序,</p>
<p><code>key1=value1&amp;key2=value2&amp;key3=value3 </code></p>
<h3 id="Appsecret"><a href="#Appsecret" class="headerlink" title="Appsecret"></a>Appsecret</h3><p>App内置的私钥,抓包可见</p>
<p><code>appsecret=ea85624dfcf12d7cc7b2b3a94fac1f2c</code>(栗子)</p>
<h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>加密前应该是<br><code> key1=value1&amp;key2=value2&amp;key3=value3ea85624dfcf12d7cc7b2b3a94fac1f2c</code></p>
<p>附上一个php的栗子</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * $data array</span></span><br><span class="line"><span class="comment"> * $appSecret string</span></span><br><span class="line"><span class="comment"> * return string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createSign</span>(<span class="params"><span class="variable">$data</span>,</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="variable">$appSecret</span> = <span class="string">&#x27;ea85624dfcf12d7cc7b2b3a94fac1f2c&#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">ksort</span>(<span class="variable">$data</span>);</span><br><span class="line">    <span class="variable">$url_build</span> = <span class="title function_ invoke__">http_build_query</span>(<span class="variable">$data</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">http_build_query</span>(<span class="variable">$data</span>) . <span class="variable">$appSecret</span>);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></div>


<p>END.</p>
]]></content>
      <categories>
        <category>Bilibili</category>
      </categories>
      <tags>
        <tag>Bilibili</tag>
        <tag>Sign</tag>
      </tags>
  </entry>
  <entry>
    <title>Bilibili Web端直播加密心跳请求解析</title>
    <url>/2020/07/22/Bilibili-Web%E7%AB%AF%E7%9B%B4%E6%92%AD%E5%8A%A0%E5%AF%86%E5%BF%83%E8%B7%B3%E8%AF%B7%E6%B1%82%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>清一色的开篇，目的只为水一篇文章…<br>这次是Bilibili Web端直播心跳API一个加解密算法<br>去年写的东西，放着一直没怎么使用，一直懒就没写…<br>以下所有数据都脱敏处理或者打码，不要作测试数据…  </p>
<h2 id="Bilibili-Live"><a href="#Bilibili-Live" class="headerlink" title="Bilibili Live"></a>Bilibili Live</h2><p>如果研究的朋友，可能都抓过包看过数据包的情况<br>有两个关键请求，分别为<code>reportEnterRoom</code>和<code>reportHeartBeat</code><br>两个请求在不同状态下带入一个加密参数 <code>s</code>  </p>
<h3 id="reportEnterRoom"><a href="#reportEnterRoom" class="headerlink" title="reportEnterRoom"></a>reportEnterRoom</h3><blockquote>
<p><a class="link"   href="https://live-trace.bilibili.com/xlive/data-interface/v1/x25Kn/E" >https://live-trace.bilibili.com/xlive/data-interface/v1/x25Kn/E <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>E请求在心跳流程中只请求一次，进入房间  </p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/07/22/EU23Iukrq6RPdFW.png"
                     
                ></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"># E 1</span><br><span class="line"></span><br><span class="line">id: [1,145,0,123456]</span><br><span class="line">device: [&quot;AUTO3915894629123456&quot;,&quot;799c882c-06de-4bfe-a358-98a76dccfa07&quot;]</span><br><span class="line">ts: 1595348574562</span><br><span class="line">is_patch: 0</span><br><span class="line">heart_beat: []</span><br><span class="line">ua: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36 Edg/83.0.478.64</span><br><span class="line">csrf_token: 08jbtyz494rzim62c7k29mk7tjc8s5ez</span><br><span class="line">csrf: 08jbtyz494rzim62c7k29mk7tjc8s5ez</span><br><span class="line">visit_id: </span><br><span class="line"></span><br><span class="line">&#123;&quot;code&quot;:0,&quot;message&quot;:&quot;0&quot;,&quot;ttl&quot;:1,&quot;data&quot;:&#123;&quot;timestamp&quot;:1595348575,&quot;heartbeat_interval&quot;:300,&quot;secret_key&quot;:&quot;seacasdgyijfhofiuxoannn&quot;,&quot;secret_rule&quot;:[2,5,1,4],&quot;patch_status&quot;:2&#125;&#125;</span><br></pre></td></tr></table></figure></div>
<blockquote>
<p>is_patch &#x3D;&#x3D; 0 -&gt; heart_beat &#x3D;&#x3D; [] 一般直接使用这个</p>
</blockquote>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"># E 2</span><br><span class="line">is_patch: 1</span><br><span class="line">heart_beat: [&#123;&quot;s&quot;:&quot;jjh64tcxjjjd062s2sfxfkrcey63a0z1jc9hrkjyy4d9436fib9wj0pynwmncpeib9i4ckjxmnkw1e0h41mn86fir47yzcafrspzrp05i9rnf0dbje6ndcsk3f1bm4th&quot;,&quot;id&quot;:&quot;[6,235,1,123456]&quot;,&quot;device&quot;:&quot;[\&quot;AUTO3915894629123456\&quot;,\&quot;7b9faf1a-cdd0-45a7-8355-e68972550341\&quot;]&quot;,&quot;ets&quot;:1595248610,&quot;benchmark&quot;:&quot;seacasdgyijfhofiuxoannn&quot;,&quot;time&quot;:285,&quot;ts&quot;:1595248894609,&quot;ua&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36 Edg/83.0.478.64&quot;&#125;]</span><br></pre></td></tr></table></figure></div>
<blockquote>
<p>is_patch &#x3D;&#x3D; 1 -&gt; heart_beat &#x3D;&#x3D; [********] 短时间内重复进出直播间触发</p>
</blockquote>
<h3 id="reportHeartBeat"><a href="#reportHeartBeat" class="headerlink" title="reportHeartBeat"></a>reportHeartBeat</h3><blockquote>
<p><a class="link"   href="https://live-trace.bilibili.com/xlive/data-interface/v1/x25Kn/X" >https://live-trace.bilibili.com/xlive/data-interface/v1/x25Kn/X <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>X请求在心跳流程中按次循环，必须先E再循环请求X  </p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/07/22/r5zImuAYaftlUWi.png"
                     
                ></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"># X 1</span><br><span class="line">s: d6fb6f7fdef8de9262e2b27ff6ef185a8d2ff72ce68f0a3648797e146bd655d6f5aab5e8f46826cde306267de149ae439a8ed6c3ce1e22220f2af498be1d144f</span><br><span class="line">id: [1,145,1,123456]</span><br><span class="line">device: [&quot;AUTO3915894629123456&quot;,&quot;799c882c-06de-4bfe-a358-98a76dccfa07&quot;]</span><br><span class="line">ets: 1595348575</span><br><span class="line">benchmark: seacasdgyijfhofiuxoannn</span><br><span class="line">time: 300</span><br><span class="line">ts: 1595348874823</span><br><span class="line">ua: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36 Edg/83.0.478.64</span><br><span class="line">csrf_token: 08jbtyz494rzim62c7k29mk7tjc8s5ez</span><br><span class="line">csrf: 08jbtyz494rzim62c7k29mk7tjc8s5ez</span><br><span class="line">visit_id: k5fj7uhwfn4</span><br><span class="line"></span><br><span class="line">&#123;&quot;code&quot;:0,&quot;message&quot;:&quot;0&quot;,&quot;ttl&quot;:1,&quot;data&quot;:&#123;&quot;heartbeat_interval&quot;:300,&quot;timestamp&quot;:1595348875,&quot;secret_rule&quot;:[2,5,1,4],&quot;secret_key&quot;:&quot;seacasdgyijfhofiuxoannn&quot;&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># X 2</span><br><span class="line">s: 8323ed71eac733c50956f46fbe10023826270197ee4af09c6ef036c1a798005298036de230bfc8ecde2e4018ee232884a2a813d89d12d701ab16f5c23d685ec9</span><br><span class="line">id: [1,145,2,123456]</span><br><span class="line">device: [&quot;AUTO3915894629123456&quot;,&quot;799c882c-06de-4bfe-a358-98a76dccfa07&quot;]</span><br><span class="line">ets: 1595348875</span><br><span class="line">benchmark: seacasdgyijfhofiuxoannn</span><br><span class="line">time: 300</span><br><span class="line">ts: 1595349175008</span><br><span class="line">ua: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36 Edg/83.0.478.64</span><br><span class="line">csrf_token: 08jbtyz494rzim62c7k29mk7tjc8s5ez</span><br><span class="line">csrf: 08jbtyz494rzim62c7k29mk7tjc8s5ez</span><br><span class="line">visit_id: k5fj7uhwfn4</span><br><span class="line"></span><br><span class="line">&#123;&quot;code&quot;:0,&quot;message&quot;:&quot;0&quot;,&quot;ttl&quot;:1,&quot;data&quot;:&#123;&quot;heartbeat_interval&quot;:300,&quot;timestamp&quot;:1595349175,&quot;secret_rule&quot;:[2,5,1,4],&quot;secret_key&quot;:&quot;seacasdgyijfhofiuxoannn&quot;&#125;&#125;</span><br><span class="line"> </span><br><span class="line"># X 3</span><br><span class="line">s: 369b18326a99fff5b5556da14039f807f21030e390de6f204a53d0cab0cccba7f0d0bcc60347f8fc43d9905be775f0c0fcdab4dd9bd6c8a52465f4a19b35cf36</span><br><span class="line">id: [1,145,3,123456]</span><br><span class="line">device: [&quot;AUTO3915894629123456&quot;,&quot;799c882c-06de-4bfe-a358-98a76dccfa07&quot;]</span><br><span class="line">ets: 1595349175</span><br><span class="line">benchmark: seacasdgyijfhofiuxoannn</span><br><span class="line">time: 300</span><br><span class="line">ts: 1595349475071</span><br><span class="line">ua: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36 Edg/83.0.478.64</span><br><span class="line">csrf_token: 08jbtyz494rzim62c7k29mk7tjc8s5ez</span><br><span class="line">csrf: 08jbtyz494rzim62c7k29mk7tjc8s5ez</span><br><span class="line">visit_id: k5fj7uhwfn4</span><br><span class="line"></span><br><span class="line">&#123;&quot;code&quot;:0,&quot;message&quot;:&quot;0&quot;,&quot;ttl&quot;:1,&quot;data&quot;:&#123;&quot;heartbeat_interval&quot;:300,&quot;timestamp&quot;:1595349475,&quot;secret_rule&quot;:[2,5,1,4],&quot;secret_key&quot;:&quot;seacasdgyijfhofiuxoannn&quot;&#125;&#125;</span><br><span class="line"></span><br><span class="line"># X 4</span><br><span class="line">s: b9486ab176a70d444c7e34aa2f35c09270365fd15f5fc023036a426165d38a6fa831cde17de8a37007c53fcb204cfc0155167647c42bca263007068a42774592</span><br><span class="line">id: [1,145,4,123456]</span><br><span class="line">device: [&quot;AUTO3915894629123456&quot;,&quot;799c882c-06de-4bfe-a358-98a76dccfa07&quot;]</span><br><span class="line">ets: 1595349475</span><br><span class="line">benchmark: seacasdgyijfhofiuxoannn</span><br><span class="line">time: 300</span><br><span class="line">ts: 1595349775262</span><br><span class="line">ua: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36 Edg/83.0.478.64</span><br><span class="line">csrf_token: 08jbtyz494rzim62c7k29mk7tjc8s5ez</span><br><span class="line">csrf: 08jbtyz494rzim62c7k29mk7tjc8s5ez</span><br><span class="line">visit_id: k5fj7uhwfn4</span><br><span class="line"></span><br><span class="line">&#123;&quot;code&quot;:0,&quot;message&quot;:&quot;0&quot;,&quot;ttl&quot;:1,&quot;data&quot;:&#123;&quot;heartbeat_interval&quot;:300,&quot;timestamp&quot;:1595349775,&quot;secret_rule&quot;:[2,5,1,4],&quot;secret_key&quot;:&quot;seacasdgyijfhofiuxoannn&quot;&#125;&#125;</span><br></pre></td></tr></table></figure></div>

<h3 id="Parameter"><a href="#Parameter" class="headerlink" title="Parameter"></a>Parameter</h3><blockquote>
<p>参数注意数据规律，除了参数<code>s</code>，以下几个参数比较重要  </p>
</blockquote>
<table>
<thead>
<tr>
<th>NAME</th>
<th>DESCRIBE</th>
<th>REMARKS</th>
</tr>
</thead>
<tbody><tr>
<td>ts</td>
<td>请求时间</td>
<td>null</td>
</tr>
<tr>
<td>ets</td>
<td>可从E-&gt;X*n依次从回显中取值</td>
<td>null</td>
</tr>
<tr>
<td>id</td>
<td>大分区、小分区、轮次、长位直播间</td>
<td>null</td>
</tr>
<tr>
<td>secret_rule</td>
<td>加密规则</td>
<td>null</td>
</tr>
<tr>
<td>heartbeat_interval</td>
<td>请求之间的休眠</td>
<td>null</td>
</tr>
<tr>
<td>secret_key</td>
<td>加密规则</td>
<td>null</td>
</tr>
</tbody></table>
<blockquote>
<p>设备、版本不同可能存在参数差异  </p>
</blockquote>
<h2 id="逻辑"><a href="#逻辑" class="headerlink" title="逻辑"></a>逻辑</h2><p>这里只贴一下大概的流程，具体的细节可以看后面的代码<br>加密前明文主要是一些直播参数，以及<code>dom</code>、’window’、<code>document</code><br>加密部分是一个<code>wasm</code>文件，带入参数以及<code>secret_rule</code>等加密<br>加密后密文是一个128位的HASH值<br>解密过程就是一场艰苦的和JS玩捉迷藏的游戏  </p>
<blockquote>
<p>进入直播间和循环心跳<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/07/22/dA59OUMBqXvpJli.png"
                     
                ></p>
</blockquote>
<blockquote>
<p>外层调用心跳以及计算SIGN<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/07/22/MEUyAonHSXrzGD6.png"
                     
                ></p>
</blockquote>
<blockquote>
<p>初始化Wasm<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/07/22/cIZNMawX2UbWzDo.png"
                     
                ></p>
</blockquote>
<blockquote>
<p>调用Wasm加密Spyder (加密不止一轮)<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/07/22/kb4Nc8KCw1jaOpd.png"
                     
                ></p>
</blockquote>
<blockquote>
<p>Spyder本体 (cargo-web)<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/07/22/CPiygfxepGEsb5k.png"
                     
                ></p>
</blockquote>
<blockquote>
<p>深度可以看看<a class="link"   href="https://webassembly.github.io/wabt/demo/wasm2wat/" >wasm2wat demo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/07/22/gMbwhPefB1d3j75.png"
                     
                ></p>
</blockquote>
<blockquote>
<p>Demo<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2020/07/22/AMqcRxy4K2wmDJr.png"
                     
                ></p>
</blockquote>
<blockquote>
<p>只是贴出大概步骤，跳转并只不是一个js文件里发生  </p>
</blockquote>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><blockquote>
<p>仓库地址 <a class="link"   href="https://github.com/lkeme/bilibili-pcheartbeat" >哔哩哔哩 Web端直播加密心跳请求解析 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>代码逻辑比较简单，详情施工中</p>
</blockquote>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>文章写的比较乱不全，会贴出加解密部分，剩下的东西自己分析了<br>该文章代码只为学习，麻烦未经允许禁止转载哦  </p>
<p>靠别人写全部代码，不太可能，大家都是鸽子，咕咕咕！  </p>
<p>END.  </p>
]]></content>
      <categories>
        <category>Bilibili</category>
      </categories>
      <tags>
        <tag>Bilibili</tag>
        <tag>Live</tag>
        <tag>Heartbeat</tag>
        <tag>Wasm</tag>
        <tag>Js</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS 7搭建开源签到项目教程</title>
    <url>/2018/10/09/CentOS-7%E6%90%AD%E5%BB%BA%E5%BC%80%E6%BA%90%E7%AD%BE%E5%88%B0%E9%A1%B9%E7%9B%AE%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Centos7.5&#x2F;Python2.7</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol>
<li>一台正常工作的VPS</li>
<li>准备一个域名用于解析(可选)</li>
</ol>
<h2 id="开源项目"><a href="#开源项目" class="headerlink" title="开源项目"></a>开源项目</h2><p>签到 —— 一个自动签到框架 base on an HAR editor</p>
<p><a class="link"   href="https://github.com/binux/qiandao" >签到(项目) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a class="link"   href="https://qiandao.today/" >签到(模板) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="搭建部署"><a href="#搭建部署" class="headerlink" title="搭建部署"></a>搭建部署</h2><p>Centos</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开发工具包</span></span><br><span class="line">yum groupinstall <span class="string">&quot;Development Tools&quot;</span> -y</span><br><span class="line">yum install python-devel mysql-connector-python git -y</span><br><span class="line">pip install tornado==4.5.3 u-msgpack-python jinja2 chardet requests pbkdf2 pycrypto</span><br></pre></td></tr></table></figure></div>
<p>Ubuntu or Debian</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install python-dev autoconf g++ python-pbkdf2</span><br><span class="line">pip install tornado u-msgpack-python jinja2 chardet requests pbkdf2 pycrypto</span><br></pre></td></tr></table></figure></div>

<p>克隆项目</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/binux/qiandao.git</span><br><span class="line"><span class="built_in">cd</span> qiandao</span><br></pre></td></tr></table></figure></div>

<h2 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 后台运行</span></span><br><span class="line">yum install screen -y</span><br><span class="line">screen -S qiandao</span><br><span class="line"><span class="comment"># 运行</span></span><br><span class="line">python ./run.py</span><br></pre></td></tr></table></figure></div>
<p>成功的话访问<code>http://ip:8923/</code></p>
<p>登陆注册设置管理员</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">python ./chrole.py your@email.address admin</span><br></pre></td></tr></table></figure></div>

<p>模板的话可以在主站下载，也可以自己做，都有教程的。</p>
<h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><p>基本使用用ip访问就好，如果有要求域名的话，就使用反向代理吧</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">yum install nginx -y</span><br><span class="line">systemctl start nginx</span><br><span class="line">vim /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure></div>

<p>conf配置</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">server </span><br><span class="line">&#123;</span><br><span class="line">     listen  80;</span><br><span class="line">     #替换域名</span><br><span class="line">     server_name  domain.com;</span><br><span class="line">     #charset koi8-r;</span><br><span class="line">     #access_log  logs/host.access.log  main;</span><br><span class="line">     location / </span><br><span class="line">             &#123;</span><br><span class="line">             proxy_set_header Host $host;</span><br><span class="line">             proxy_set_header X-Real-Ip $remote_addr;</span><br><span class="line">             proxy_set_header X-Forwarded-For $remote_addr;</span><br><span class="line">             proxy_pass http://localhost:8923;</span><br><span class="line">             &#125;        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p><code>nginx -t</code>然后重启服务</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure></div>
<p>开机自启</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> nginx</span><br></pre></td></tr></table></figure></div>

<p>这样就能通过域名访问了</p>
<p>教程很乱，当文档看吧，针对有基础的，很多小细节都没多写。</p>
<p>End…</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>centos</tag>
        <tag>开源</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos7编译安装Python3</title>
    <url>/2018/09/17/Centos7%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85Python3/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Centos7.5&#x2F;Python3.6.6，记录下安装过程，以便日后查看</p>
<h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc make  -y</span><br><span class="line"><span class="comment"># 看需求安装</span></span><br><span class="line">yum groupinstall <span class="string">&quot;Development Tools&quot;</span>  -y</span><br></pre></td></tr></table></figure></div>

<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a class="link"   href="https://www.python.org/downloads/" >Python下载官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a class="link"   href="https://www.python.org/ftp/python/3.6.6/Python-3.6.6.tar.xz" >Python3.6.6 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<blockquote>
<p>选择需要的版本下载<code>XZ Compressed source tabball</code></p>
</blockquote>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>以<code>Python3.6.6</code>安装为例</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 解包，解压缩</span></span><br><span class="line">xz -d Python-3.6.6.tar.xz</span><br><span class="line">tar -xvf Python-3.6.6.tar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入目录</span></span><br><span class="line"><span class="built_in">cd</span> Python-3.6.6</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">./configure --prefix=/usr/local/python3.6.6 --enable-optimizations</span><br><span class="line"><span class="comment"># --prefix=/usr/local/python3.6.6 预安装目录</span></span><br><span class="line"><span class="comment"># --enable-optimizations 是优化选项(LTO，PGO 等)加上这个 flag 编译后，性能有 10% 左右的优化(看需求)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>等待编译完成即可，如果没有什么其他的报错，应该就OK的。</p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>怎么喜欢怎么来</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s /usr/local/python3.6.6/bin/python3.6 /usr/local/bin/python3.6</span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/python3.6.6/bin/pip3.6 /usr/local/bin/pip3.6</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>使用<code>python3.6 xxx.py</code>和<code>pip3.6 install xxxx</code></p>
</blockquote>
<p>END.</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Django2.2以上针对Sqlite3版本不匹配</title>
    <url>/2019/04/17/Django2-2%E4%BB%A5%E4%B8%8A%E9%92%88%E5%AF%B9Sqlite3%E7%89%88%E6%9C%AC%E4%B8%8D%E5%8C%B9%E9%85%8D/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>很久没有水博客了，在运行一个<code>Django</code>项目的时， 服务器版本大概<code>Centos7.2</code>，新机器花了点时候安装完需要的环境和依赖，本想一发入魂直接成功的，昨天在Ubuntu上成功运行，<br>结果Centos就给我整个报错。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">.....</span><br><span class="line">raise ImproperlyConfigured(<span class="string">&#x27;SQLite 3.8.3 or later is required (found %s).&#x27;</span> % Database.sqlite_version)</span><br><span class="line">django.core.exceptions.ImproperlyConfigured: SQLite 3.8.3 or later is required (found 3.7.17).</span><br></pre></td></tr></table></figure></div>

<p>就是<code>Django</code>查到的<code>Sqlite</code>的版本不对，找到的是3.7.17，<br>但是对版本要求(version &lt;&#x3D; 3.8.3)，爬了一下资料，<br>在<a class="link"   href="https://docs.djangoproject.com/en/2.2/releases/2.2/" >Django版本说明 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>中看到</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"># SQLite的最低支持版本从3.7.15增加到3.8.3</span><br><span class="line">The minimum supported version of SQLite is increased from 3.7.15 to 3.8.3.</span><br></pre></td></tr></table></figure></div>

<p>这就得升级Sqlite3的版本了</p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a class="link"   href="https://www.sqlite.org/download.html" >Sqlite 下载官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a class="link"   href="https://www.sqlite.org/2019/sqlite-autoconf-3280000.tar.gz" >Sqlite 3.28.0 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<blockquote>
<p>选择需要的版本下载<code>Source Code -&gt; sqlite-autoconf*</code></p>
</blockquote>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>以写博客时的最新版安装为例</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载</span></span><br><span class="line">$ wget http://www.sqlite.org/2019/sqlite-autoconf-3280000.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解包</span></span><br><span class="line">$ tar -zxvf sqlite-autoconf-3280000.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入目录</span></span><br><span class="line">$ <span class="built_in">cd</span> sqlite-autoconf-3280000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 </span></span><br><span class="line">$ ./configure </span><br><span class="line"><span class="comment"># --prefix=/usr/local 预安装目录(可选)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">$ make &amp;&amp; sudo make install</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>等待编译完成即可，如果没有什么其他的报错，应该就OK的。</p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>如果是Centos7，yum更新了最新的Sqlite，默认的版本应该是3.7.17，</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 备份默认的sqlite</span></span><br><span class="line">$ sudo <span class="built_in">mv</span> -v /usr/bin/sqlite3 /usr/bin/sqlite3.7.17</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;/usr/bin/sqlite3&quot;</span> -&gt; <span class="string">&quot;/usr/bin/sqlite3.7.17&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制新版本的sqlite文件夹</span></span><br><span class="line"><span class="comment"># 此时目录 sqlite-autoconf-3280000</span></span><br><span class="line">$ sudo <span class="built_in">cp</span> -v sqlite3 /usr/bin </span><br><span class="line"></span><br><span class="line"><span class="string">&quot;sqlite3&quot;</span> -&gt; <span class="string">&quot;/usr/bin/sqlite3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看一下文件是否成功</span></span><br><span class="line">$ <span class="built_in">ls</span> /usr/bin |grep sqlite</span><br><span class="line"></span><br><span class="line">sqlite3</span><br><span class="line">sqlite3.7.17</span><br><span class="line"></span><br><span class="line"><span class="comment"># 共享库</span></span><br><span class="line">$ <span class="built_in">export</span> LD_LIBRARY_PATH=<span class="string">&quot;/usr/local/lib&quot;</span></span><br><span class="line"><span class="comment"># 如果登出后失效的，可以写进~/.bashrc 或 ~/.bash_profile</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 版本查看</span></span><br><span class="line">$ sqlite3 --version</span><br><span class="line">3.28.0 2019-04-16 19:49:53 884b4b7e502b4e991677b53971277adfaf0a04a284f8e483e2553d0f83156b50</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Python调用Sqlite版本查看</span></span><br><span class="line">$ python3.6</span><br><span class="line">Python 3.6.8 (default, Apr 16 2019, 14:31:25) </span><br><span class="line">[GCC 4.8.5 20150623 (Red Hat 4.8.5-36)] on linux</span><br><span class="line">Type <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> or <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; import sqlite3</span><br><span class="line">&gt;&gt;&gt; sqlite3.sqlite_version</span><br><span class="line"><span class="string">&#x27;3.28.0&#x27;</span></span><br><span class="line">&gt;&gt;&gt; <span class="built_in">exit</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行Django</span></span><br><span class="line">$ python3.6 manage.py</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;manage.py help &lt;subcommand&gt;&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span> on a specific subcommand.</span><br><span class="line"></span><br><span class="line">Available subcommands:</span><br><span class="line"></span><br><span class="line">[auth]</span><br><span class="line">    changepassword</span><br><span class="line">    createsuperuser</span><br><span class="line"></span><br><span class="line">[contenttypes]</span><br><span class="line">    remove_stale_contenttypes</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>正常了，没有版本不匹配的报错了。<br>其实主要sqlite3是yum源的最新版本才3.7.17，别卸载它后再装(跳过坑)，yum依赖sqlite，所以只有编译安装或者其他方式安装后替换文件目录。</p>
<blockquote>
<p>另外要注意的是，<code>sudo python3.6 &amp; python3.6</code>的执行结果是不同的。</p>
</blockquote>
<blockquote>
<p>sudo不一定能读到新版本的Sqlite，窝再去爬爬文章待补充。</p>
</blockquote>
<blockquote>
<p>文章比较乱，机器差异什么的或许有不同，仅供参考。</p>
</blockquote>
<p>参考文章: <a class="link"   href="https://qiita.com/rururu_kenken/items/8202b30b50e3bfa75821" >Django2.2で開発サーバー起動時にSQLite3のエラーが出た場合の対応 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>END.</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Sqlite</tag>
        <tag>Django</tag>
        <tag>Centos</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker随记</title>
    <url>/2018/04/28/Docker%E9%9A%8F%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>记录一些Docker的使用</p>
<h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><blockquote>
<p><a class="link"   href="https://docs.docker.com/" >Docker文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<h2 id="容器服务"><a href="#容器服务" class="headerlink" title="容器服务"></a>容器服务</h2><table>
<thead>
<tr>
<th>服务商</th>
</tr>
</thead>
<tbody><tr>
<td><a class="link"   href="https://dev.aliyun.com/search.html" >阿里云 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td><a class="link"   href="https://hub.alauda.cn/" >灵雀云 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td><a class="link"   href="https://hub.daocloud.io/" >DaoCloud <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td><a class="link"   href="https://hub.docker.com/" >DockerHub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td>add…</td>
</tr>
</tbody></table>
<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it -p local_port:container_port --name=<span class="string">&quot;example&quot;</span> -v local_path:container_path image_id /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># -i, --interactive=false    打开STDIN，用于控制台交互    </span></span><br><span class="line"><span class="comment"># -t, --tty=false            分配tty设备，该可以支持终端登录，默认为false</span></span><br><span class="line"><span class="comment"># -v, --volume=[]            给容器挂载存储卷，挂载到容器的某个目录  </span></span><br><span class="line"><span class="comment"># --name=&quot;nginx-lb&quot; 		 为容器指定一个名称</span></span><br><span class="line"><span class="comment"># -d 						 后台启动</span></span><br><span class="line"><span class="comment"># -p                         指定端口</span></span><br></pre></td></tr></table></figure></div>

<h2 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker ps -a</span><br><span class="line"><span class="comment"># 查看容器列表</span></span><br><span class="line"><span class="comment"># -a，查看所有容器包括停止状态的容器 </span></span><br><span class="line"><span class="comment"># -l，查看最新创建的容器 </span></span><br><span class="line"><span class="comment"># -n=x，查看最后创建的x个容器 </span></span><br></pre></td></tr></table></figure></div>


<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">CONTAINER ID| IMAGE| COMMAND| CREATED| STATUS| PORTS| NAMES </span><br><span class="line">容器ID|使用的镜像|运行时的命令|创建时间|运行状态|对外开放的端口|容器名称</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker images</span><br><span class="line">docker image <span class="built_in">ls</span></span><br><span class="line"><span class="comment"># 查看镜像列表</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">REPOSITORY|TAG|IMAGE ID|CREATED|SIZE</span><br><span class="line">仓库名|标签(版本)|镜像ID|创建时间|大小</span><br></pre></td></tr></table></figure></div>

<h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker start 容器名或容器ID </span><br><span class="line"><span class="comment"># 容器进入运行状态，当容器完成任务后，会自己退出，进入停止状态</span></span><br></pre></td></tr></table></figure></div>

<h2 id="终止"><a href="#终止" class="headerlink" title="终止"></a>终止</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop 容器名或容器ID </span><br></pre></td></tr></table></figure></div>

<h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">rm</span> 容器名或容器ID</span><br><span class="line"><span class="comment"># 删除容器,前提要容器没有运行</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">rm</span> `docker ps -a -q`</span><br><span class="line"><span class="comment"># 一次性删除所有容器</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker rmi 镜像名或者镜像ID</span><br><span class="line"><span class="comment"># 删除镜像</span></span><br></pre></td></tr></table></figure></div>

<h2 id="进入"><a href="#进入" class="headerlink" title="进入"></a>进入</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker attach 容器名或</span><br><span class="line"><span class="comment"># attach进入容器的活动会话进程</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it 容器ID /bin/bash</span><br><span class="line"><span class="comment"># exec进入容器启动一个新的交互</span></span><br></pre></td></tr></table></figure></div>

<h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker logs 容器名或容器ID</span><br><span class="line"><span class="comment"># 查看容器里在干什么</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">docker top 容器名或容器ID</span><br><span class="line"><span class="comment"># 查看容器里的进程</span></span><br></pre></td></tr></table></figure></div>

<h2 id="加速器"><a href="#加速器" class="headerlink" title="加速器"></a>加速器</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo <span class="built_in">mkdir</span> -p /etc/docker</span><br><span class="line">$ sudo <span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://oyukeh0j.mirror.aliyuncs.com&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">$ sudo /etc/init.d/docker restart</span><br></pre></td></tr></table></figure></div>


<h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>End</p>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Git杂项命令合集</title>
    <url>/2022/01/26/Git%E6%9D%82%E9%A1%B9%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>记录Git杂项命令合集</p>
<h3 id="删除远程分支"><a href="#删除远程分支" class="headerlink" title="删除远程分支"></a>删除远程分支</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ git push origin --delete [branchname]</span><br></pre></td></tr></table></figure></div>

<h3 id="删除本地已合并的分支"><a href="#删除本地已合并的分支" class="headerlink" title="删除本地已合并的分支"></a>删除本地已合并的分支</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ git branch -d [branchname]</span><br><span class="line">$ git branch -D [branchName]</span><br></pre></td></tr></table></figure></div>

<h3 id="删除所有本地TAG"><a href="#删除所有本地TAG" class="headerlink" title="删除所有本地TAG"></a>删除所有本地TAG</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ git tag -l | xargs git tag -d</span><br></pre></td></tr></table></figure></div>

<h3 id="删除远程本地TAG"><a href="#删除远程本地TAG" class="headerlink" title="删除远程本地TAG"></a>删除远程本地TAG</h3><blockquote>
<p>注意<code>Windows</code>平台可能需要用<code>git-bash</code>执行</p>
</blockquote>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ git show-ref --tag | awk <span class="string">&#x27;&#123;print &quot;:&quot; $2&#125;&#x27;</span> | xargs git push origin</span><br></pre></td></tr></table></figure></div>

<h3 id="新建空白分支"><a href="#新建空白分支" class="headerlink" title="新建空白分支"></a>新建空白分支</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ git checkout --orphan newbranch</span><br><span class="line">$ git <span class="built_in">rm</span> -rf .</span><br><span class="line">$ git commit --allow-empty -m <span class="string">&quot;[empty|rm] initial commit&quot;</span></span><br></pre></td></tr></table></figure></div>

<h3 id="强制拉取并覆盖本地代码"><a href="#强制拉取并覆盖本地代码" class="headerlink" title="强制拉取并覆盖本地代码"></a>强制拉取并覆盖本地代码</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ git fetch --all</span><br><span class="line">$ git reset --hard origin/master</span><br><span class="line">$ git pull</span><br></pre></td></tr></table></figure></div>

<h3 id="加速克隆及下载镜像"><a href="#加速克隆及下载镜像" class="headerlink" title="加速克隆及下载镜像"></a>加速克隆及下载镜像</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># https://doc.fastgit.org/</span></span><br><span class="line"><span class="comment"># https://gitclone.com/</span></span><br><span class="line"><span class="comment"># https://github.com.cnpmjs.org/</span></span><br><span class="line"><span class="comment"># https://ghproxy.com/</span></span><br><span class="line"><span class="comment"># 免替换</span></span><br><span class="line">$ git config --global url.<span class="string">&quot;https://hub.fastgit.org&quot;</span>.insteadOf https://github.com</span><br></pre></td></tr></table></figure></div>

<h3 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 全局项目</span></span><br><span class="line">$ git config --global http.proxy 127.0.0.1:1080</span><br><span class="line">$ git config --global https.proxy 127.0.0.1:1080</span><br><span class="line"><span class="comment"># 单独项目</span></span><br><span class="line">$ git config --<span class="built_in">local</span> http.proxy 127.0.0.1:1080</span><br><span class="line">$ git config --<span class="built_in">local</span> https.proxy 127.0.0.1:1080</span><br><span class="line"><span class="comment"># 清除</span></span><br><span class="line">$ git config --global --<span class="built_in">unset</span> http.proxy</span><br><span class="line">$ git config --global --<span class="built_in">unset</span> https.proxy</span><br><span class="line"><span class="comment"># 针对 github.com 的单独配置</span></span><br><span class="line">$ git config --global http.https://github.com.proxy socks5://127.0.0.1:1080</span><br><span class="line">$ git config --global https.https://github.com.proxy socks5://127.0.0.1:1080</span><br><span class="line">$ git config --global --<span class="built_in">unset</span> http.https://github.com.proxy</span><br><span class="line">$ git config --global --<span class="built_in">unset</span> https.https://github.com.proxy</span><br></pre></td></tr></table></figure></div>

<h3 id="查看配置"><a href="#查看配置" class="headerlink" title="查看配置"></a>查看配置</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看所有配置</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config -l</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看用户配置</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global -l</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看系统配置</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --system -l</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看仓库配置</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --<span class="built_in">local</span> -l</span> </span><br></pre></td></tr></table></figure></div>

<h3 id="存储用户名和密码"><a href="#存储用户名和密码" class="headerlink" title="存储用户名和密码"></a>存储用户名和密码</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 缓存时间 默认15分钟  --timeout 自定义时间</span></span><br><span class="line">$ git config --global credential.helper cache</span><br><span class="line">$ git config --global credential.helper <span class="string">&#x27;cache --timeout 3600&#x27;</span></span><br><span class="line"><span class="comment"># 永久存储</span></span><br><span class="line">$ git config --global credential.helper store</span><br></pre></td></tr></table></figure></div>

<h3 id="提交Commit关联Issue"><a href="#提交Commit关联Issue" class="headerlink" title="提交Commit关联Issue"></a>提交Commit关联Issue</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 操作 fixes fixed fix closes close closed</span></span><br><span class="line">$ git commit -m <span class="string">&quot;... &#123;action&#125; #&#123;issue_id&#125;&quot;</span></span><br><span class="line">$ git commit -m <span class="string">&quot;... fixed #1024&quot;</span></span><br></pre></td></tr></table></figure></div>

<h3 id="清空commit记录"><a href="#清空commit记录" class="headerlink" title="清空commit记录"></a>清空commit记录</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ git rebase --root -i</span><br></pre></td></tr></table></figure></div>

<h3 id="修改最近一次commit注释"><a href="#修改最近一次commit注释" class="headerlink" title="修改最近一次commit注释"></a>修改最近一次commit注释</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim  i -&gt; 修改 -&gt; esc -&gt; :wq</span></span><br><span class="line">$ git commit --amend</span><br></pre></td></tr></table></figure></div>

<h3 id="提交大型文件-lfs"><a href="#提交大型文件-lfs" class="headerlink" title="提交大型文件(lfs)"></a>提交大型文件(lfs)</h3><blockquote>
<p>Git LFS 是 Github 开发的一个 Git 的扩展，用于实现 Git 对大文件的支持</p>
</blockquote>
<h4 id="安装LFS"><a href="#安装LFS" class="headerlink" title="安装LFS"></a>安装LFS</h4><h5 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h5><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt-get install git-lfs</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git lfs install</span></span><br></pre></td></tr></table></figure></div>

<h5 id="Mac-HomeBrew"><a href="#Mac-HomeBrew" class="headerlink" title="Mac(HomeBrew)"></a>Mac(HomeBrew)</h5><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">/usr/bin/ruby -e <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">brew install git-lfs</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git lfs install</span></span><br></pre></td></tr></table></figure></div>

<h5 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h5><p><a class="link"   href="https://github.com/git-lfs/git-lfs/releases" >Windows Installer <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载安装上述链接的文件后执行命令</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git lfs install</span></span><br></pre></td></tr></table></figure></div>

<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><blockquote>
<p>使用前需要<code>git lfs install</code>开启功能</p>
</blockquote>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">大文件追踪</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git lfs track <span class="string">&quot;your_large_file&quot;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">会生成大文件夹追踪记录，并添加提交</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add .gitattributes</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add your_large_file</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -m <span class="string">&quot;Add large file&quot;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git push origin master</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">追踪记录</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git lfs ls-files</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">可选<span class="built_in">clone</span>方式</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git lfs <span class="built_in">clone</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<p>END.</p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Homestead安装phpredis扩展</title>
    <url>/2018/02/23/Homestead%E5%AE%89%E8%A3%85phpredis%E6%89%A9%E5%B1%95/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天写个<code>demo</code>，用到了<code>Redis</code>,但是报错了<code> Class ‘Redis’ not found ...</code>,使用的是<code>Homestead</code>环境，php没有装redis扩展…</p>
<h2 id="phpredis"><a href="#phpredis" class="headerlink" title="phpredis"></a>phpredis</h2><p>在<code>vagrant ssh</code>中操作,要<code>sudo</code>权限，不然会报错.</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/phpredis/phpredis.git</span><br><span class="line">$ <span class="built_in">cd</span> phpredis              </span><br><span class="line">//phpize版本要和php版本一致,我这里使用7.2版本.</span><br><span class="line">$ /usr/bin/phpize7.2</span><br><span class="line">$ ./configure --with-php-config=/usr/bin/php-config7.2</span><br><span class="line">//这里边也需要根据情况指定php-config的版本，且和phpize的版本保持一致.</span><br><span class="line">$ make &amp;&amp; make install</span><br></pre></td></tr></table></figure></div>

<p>编译完成会有显示一个扩展所在目录，如果没有的话，就执行.</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ php -i|grep extension_dir</span><br><span class="line">//返回</span><br><span class="line">extension_dir =&gt; /usr/lib/php/201***** =&gt; /usr/lib/php/201*****</span><br></pre></td></tr></table></figure></div>

<p><code>redis.so</code>在modules目录中,把扩展移动到扩展所在目录.</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">mv</span> ./modules/redis.so /usr/lib/php/201*****</span><br></pre></td></tr></table></figure></div>
<blockquote>
<p>这些步骤都在<code>phpredis</code>目录操作.</p>
</blockquote>
<p>以上完成后,把扩展配置添加到<code>php</code>的配置文件.</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">touch</span> /etc/php/7.2/fpm/conf.d/20-redis.ini</span><br><span class="line">//vim编辑20-redis.ini</span><br><span class="line">//写入 extension=redis.so </span><br><span class="line">//:wq 保存</span><br></pre></td></tr></table></figure></div>

<p>重启php-fpm.</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart php7.2-fpm.service</span><br></pre></td></tr></table></figure></div>

<p>ok!一切完成，操作正常完成的话，<code>phpinfo()</code>应该就能看到了.</p>
<p>End.</p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>Homestead</tag>
        <tag>redis</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>Laravel5.6入门(三)</title>
    <url>/2018/02/22/Laravel5-6%E5%85%A5%E9%97%A8-%E4%B8%89/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>laravel5.6学习记录，学习最新的版本.</p>
<span id="more"></span>
<ul>
<li>Laravel文档<a class="link"   href="https://laravel.com/" >Laravel <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>开发工具<a class="link"   href="https://laravel.com/" >Phpstorm <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>开发环境<a class="link"   href="https://laravel.com/docs/5.6/homestead" >Homestead <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>中文文档<a class="link"   href="https://d.laravel-china.org/docs/5.5/" >Laravel-China <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>Composer<a class="link"   href="https://getcomposer.org/" >Composer <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h2 id="Laravel5-6"><a href="#Laravel5-6" class="headerlink" title="Laravel5.6"></a>Laravel5.6</h2><!--more-->

<h3 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h3><p><code>Contrller</code>用来分担路由的工作，路由作为转发，大家啊各行其是…</p>
<h4 id="控制器创建"><a href="#控制器创建" class="headerlink" title="控制器创建"></a>控制器创建</h4><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">// * 替换你的控制名称,后缀 Controller</span><br><span class="line">php artisan make:controller *</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/22/5a8e9f80d19de.png"
                     
                ></p>
<p>这样就表示控制器创建成功,<br>命令会去创建<code>app\Http\Controllers\TestController.php</code>文件，<br>以及写入命名空间和默认继承基类等，都是自动化完成.</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">App</span>\<span class="title class_">Http</span>\<span class="title class_">Controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>如果要更懒一点，命令加上 <code>--resource</code> 会自动创建一个资源控制器，<br>资源控制器包括了增删改查等方法，可以满足大部分需求.</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">// * 替换你的控制名称,后缀 Controller</span><br><span class="line">php artisan make:controller * --resource</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/22/5a8ea22ed3d88.png"
                     
                ></p>
<p>资源控制器创建完成，这和创建普通控制器没有多大区别，只是多了一些常用方法.</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//app\Http\Controllers\TestzyController.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">App</span>\<span class="title class_">Http</span>\<span class="title class_">Controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestzyController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Display a listing of the resource.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \Illuminate\Http\Response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Show the form for creating a new resource.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \Illuminate\Http\Response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Store a newly created resource in storage.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  \Illuminate\Http\Request  $request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \Illuminate\Http\Response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">store</span>(<span class="params">Request <span class="variable">$request</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Display the specified resource.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  int  $id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \Illuminate\Http\Response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Show the form for editing the specified resource.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  int  $id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \Illuminate\Http\Response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">edit</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Update the specified resource in storage.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  \Illuminate\Http\Request  $request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  int  $id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \Illuminate\Http\Response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params">Request <span class="variable">$request</span>, <span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Remove the specified resource from storage.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  int  $id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \Illuminate\Http\Response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">destroy</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<p>我们可以<code>TestzyController</code>把添加到路由中.</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//web.php</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">Resource</span>(<span class="string">&#x27;testzy&#x27;</span>, <span class="string">&#x27;TestzyController&#x27;</span>);</span><br></pre></td></tr></table></figure></div>

<p>再查看一下系统的路由信息.</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/22/5a8ea4b9d5de7.png"
                     
                ></p>
<p>可以看到各个方法对应的URL,请求方式，路由名称等信息,都是一一对应的，</p>
<p>这是按照<code>RESTful Api 设计</code>生成的格式，get是从服务器取资源、post是新建资源、put是<br>更新完整资源、patch更新部分资源、delete是删除资源.</p>
<h4 id="资源控制器的路由命名"><a href="#资源控制器的路由命名" class="headerlink" title="资源控制器的路由命名"></a>资源控制器的路由命名</h4><p>添加了资源控制器到路由着中，命名方式不再是<code>-&gt;name(&#39;&#39;)</code>的方式.</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">Resource</span>(<span class="string">&#x27;testzy&#x27;</span>, <span class="string">&#x27;TestzyController&#x27;</span>, [<span class="string">&#x27;names&#x27;</span> =&gt;</span><br><span class="line">    [</span><br><span class="line">        <span class="string">&#x27;index&#x27;</span> =&gt; <span class="string">&#x27;indexahhh&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;create&#x27;</span> =&gt;  <span class="string">&#x27;createahhh&#x27;</span></span><br><span class="line">    ]</span><br><span class="line">]);</span><br><span class="line"><span class="comment">//是第三个参数,传一个二维数组</span></span><br></pre></td></tr></table></figure></div>

<p>此时路由信息，我们修改成功</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/22/5a8ea7cf7256e.png"
                     
                ></p>
<p>控制器讲到这里，下面也说下创建模型.</p>
<h3 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h3><p><code>Model</code>是来和数据库打交道的</p>
<h4 id="创建模型"><a href="#创建模型" class="headerlink" title="创建模型"></a>创建模型</h4><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">// 创建一个新的 Eloquent 模型类</span><br><span class="line">// 我习惯把模型放到Models里</span><br><span class="line">php artisan make:model Models/Test</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/22/5a8ea957a8bc0.png"
                     
                ><br>创建成功.</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//app\Models\Test.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">App</span>\<span class="title class_">Models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>同样的，命令把文件和命名空间、继承等都弄好了.</p>
<p>模型对应的数据库迁移文件可以自己创建，当然也可以在创建模型的时候一起创建，<br>只需要加上 <code>-m</code>就ok.</p>
<blockquote>
<p>如果加上<code>-rmc</code>,会自动创建Model、资源控制器、迁移文件，懒人必备 </p>
</blockquote>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">// 创建一个新的 Eloquent 模型类</span><br><span class="line">// 我习惯把模型放到Models里</span><br><span class="line">php artisan make:model Models/Testzy -m</span><br></pre></td></tr></table></figure></div>

<p>会生成几个文件.</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//一个Model，一个迁移文件</span></span><br><span class="line">app\Models\Testzy.php</span><br><span class="line">database\migrations\<span class="number">2018_02_22_113638</span>_create_testzies_table.php</span><br></pre></td></tr></table></figure></div>


<p>End.</p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>laravel</tag>
        <tag>入门</tag>
        <tag>Artisan</tag>
      </tags>
  </entry>
  <entry>
    <title>Laravel5.6入门(二)</title>
    <url>/2018/02/22/Laravel5-6%E5%85%A5%E9%97%A8-%E4%BA%8C/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>laravel5.6学习记录，学习最新的版本.</p>
<span id="more"></span>
<ul>
<li>Laravel文档<a class="link"   href="https://laravel.com/" >Laravel <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>开发工具<a class="link"   href="https://laravel.com/" >Phpstorm <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>开发环境<a class="link"   href="https://laravel.com/docs/5.6/homestead" >Homestead <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>中文文档<a class="link"   href="https://d.laravel-china.org/docs/5.5/" >Laravel-China <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>Composer<a class="link"   href="https://getcomposer.org/" >Composer <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h2 id="Laravel5-6"><a href="#Laravel5-6" class="headerlink" title="Laravel5.6"></a>Laravel5.6</h2><!--more-->

<h3 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h3><p><code>Route</code>就是根据Url分配不同的处理程序.</p>
<p>我们可以使用</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">php artisan route:list</span><br></pre></td></tr></table></figure></div>
<p>查看程序默认的路由信息.<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/22/5a8e7d9f65f5a.png"
                     
                ><br>首页<code>/</code>路由的处理是一个<code>Closure</code>闭包函数.</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//route/web.php</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;/&#x27;</span>, function () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">view</span>(<span class="string">&#x27;welcome&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><code>get()</code>是请求方式,<code>/</code>代表首页,<code>welcome</code>是视图文件,<br><code>view(&#39;视图目录.视图文件名&#39;)</code> 目录以<code>.</code>连接,视图文件名不需要<code>.blade.php</code>后缀<br>函数可以直接定位到视图目录 <code>Resources/views/*</code>中.</p>
</blockquote>
<p>请求方式有:</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="variable">$uri</span>, <span class="variable">$callback</span>); <span class="comment">//取</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">post</span>(<span class="variable">$uri</span>, <span class="variable">$callback</span>); <span class="comment">//新建</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">put</span>(<span class="variable">$uri</span>, <span class="variable">$callback</span>);  <span class="comment">//更新完整</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">patch</span>(<span class="variable">$uri</span>, <span class="variable">$callback</span>); <span class="comment">//更新部分</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">delete</span>(<span class="variable">$uri</span>, <span class="variable">$callback</span>); <span class="comment">//删除</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">options</span>(<span class="variable">$uri</span>, <span class="variable">$callback</span>);</span><br></pre></td></tr></table></figure></div>

<p>我们可以新建一个路由和视图测试.</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/22/5a8e84fb7c91a.png"
                     
                ></p>
<blockquote>
<p><code>get</code>请求<code>/study</code>,返回<code>views/study/index.blade.php</code>视图</p>
</blockquote>
<p>访问<code>http://laravel.study/study</code></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/22/5a8e85421398b.png"
                     
                ></p>
<p>我们可以再次查看一下路由信息</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/22/5a8e8d4b02fb3.png"
                     
                ></p>
<p>这样就完成了一个非常简单的路由，把视图和路由关联在一起了</p>
<h3 id="路由和控制器绑定"><a href="#路由和控制器绑定" class="headerlink" title="路由和控制器绑定"></a>路由和控制器绑定</h3><p>因为还没讲到控制器，所以就代码示例，把闭包函数部分替换成控制器@方法即可</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;user/profile&#x27;</span>, <span class="string">&#x27;UserController@index&#x27;</span>);</span><br><span class="line"><span class="comment">//UserController 控制器名 @ index 函数</span></span><br></pre></td></tr></table></figure></div>

<h3 id="常用请求方式"><a href="#常用请求方式" class="headerlink" title="常用请求方式"></a>常用请求方式</h3><div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;foo&#x27;</span>, function () &#123;</span><br><span class="line">    <span class="comment">// 基本方式</span></span><br><span class="line">    <span class="comment">//TODO</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">post</span>(<span class="string">&#x27;foo&#x27;</span>, function () &#123;</span><br><span class="line">    <span class="comment">// 基本方式</span></span><br><span class="line">    <span class="comment">//TODO</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="title class_">Route</span>::<span class="keyword">match</span>([<span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;post&#x27;</span>], <span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 基本方式，匹配get和post</span></span><br><span class="line">    <span class="comment">//TODO</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">any</span>(<span class="string">&#x27;foo&#x27;</span>, function () &#123;</span><br><span class="line">    <span class="comment">// 基本方式，所有请求方式</span></span><br><span class="line">    <span class="comment">//TODO</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<h3 id="路由参数"><a href="#路由参数" class="headerlink" title="路由参数"></a>路由参数</h3><ul>
<li>必填参数<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/22/5a8e88562ba42.png"
                     
                ></li>
<li>可选参数<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;user/&#123;name?&#125;&#x27;</span>, function (<span class="variable">$name</span> = <span class="string">&#x27;John&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$name</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//可选参数使用?号标记，但是一定要有个默认值</span></span><br></pre></td></tr></table></figure></div></li>
</ul>
<h3 id="路由正则"><a href="#路由正则" class="headerlink" title="路由正则"></a>路由正则</h3><p>正则匹配可以使用链式操作<code>-&gt;where(&#39;参数名&#39;,&#39;正则&#39;)</code></p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;user/&#123;name&#125;&#x27;</span>, function (<span class="variable">$name</span>) &#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;)-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;[A-Za-z]+&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<h3 id="路由命名"><a href="#路由命名" class="headerlink" title="路由命名"></a>路由命名</h3><p>路由命名也可以使用链式操作<code>-&gt;name(&#39;别名&#39;)</code>,或者使用<code>Route::name(&#39;别名&#39;)</code></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/22/5a8e8e089c7be.png"
                     
                ></p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;user/profile&#x27;</span>, function () &#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;)-&gt;<span class="title function_ invoke__">name</span>(<span class="string">&#x27;profile&#x27;</span>);</span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;user/profile&#x27;</span>, <span class="string">&#x27;UserController@showProfile&#x27;</span>)-&gt;<span class="title function_ invoke__">name</span>(<span class="string">&#x27;profile&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//第二种</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">name</span>(<span class="string">&#x27;profile&#x27;</span>)-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;user/profile&#x27;</span>, function () &#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div>

<p>路由命名主要使用在 <code>route(&#39;路由名&#39;)</code>函数</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 生成 URL...</span></span><br><span class="line"><span class="variable">$url</span> = <span class="title function_ invoke__">route</span>(<span class="string">&#x27;profile&#x27;</span>);</span><br><span class="line"><span class="comment">// 生成重定向...</span></span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">redirect</span>()-&gt;<span class="title function_ invoke__">route</span>(<span class="string">&#x27;profile&#x27;</span>);</span><br></pre></td></tr></table></figure></div>

<p>路由这块姿势很多，更复杂的用到的时候再说</p>
<p>End.</p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>laravel</tag>
        <tag>入门</tag>
      </tags>
  </entry>
  <entry>
    <title>Laravel5.6入门(五)</title>
    <url>/2018/02/22/Laravel5-6%E5%85%A5%E9%97%A8-%E4%BA%94/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>laravel5.6学习记录，学习最新的版本</p>
<span id="more"></span>
<ul>
<li>Laravel文档<a class="link"   href="https://laravel.com/" >Laravel <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>开发工具<a class="link"   href="https://laravel.com/" >Phpstorm <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>开发环境<a class="link"   href="https://laravel.com/docs/5.6/homestead" >Homestead <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>中文文档<a class="link"   href="https://d.laravel-china.org/docs/5.5/" >Laravel-China <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>Composer<a class="link"   href="https://getcomposer.org/" >Composer <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h2 id="Laravel5-6"><a href="#Laravel5-6" class="headerlink" title="Laravel5.6"></a>Laravel5.6</h2><!--more-->

<h3 id="路由的拓展"><a href="#路由的拓展" class="headerlink" title="路由的拓展"></a>路由的拓展</h3><p>我们写网站后台，一般都是<code>admin</code>什么的文件夹，来表示后台文件,<br>访问的时候需要加上<code>https://localhost/admin/xxx</code>，<br>路由很方便的解决了这个问题.</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//web.php</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">prefix</span>(<span class="string">&#x27;admin&#x27;</span>)-&gt;<span class="title function_ invoke__">group</span>(function ()&#123;</span><br><span class="line">    <span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;noone&#x27;</span>,<span class="string">&#x27;TrController@noOne&#x27;</span>);</span><br><span class="line">    <span class="comment">//get请求</span></span><br><span class="line">    <span class="title class_">Route</span>::<span class="title function_ invoke__">any</span>(<span class="string">&#x27;notwo&#x27;</span>,<span class="string">&#x27;TrController@noTwo&#x27;</span>)-&gt;<span class="title function_ invoke__">name</span>(<span class="string">&#x27;notwo&#x27;</span>);</span><br><span class="line">    <span class="comment">//所有请求，命名路由</span></span><br><span class="line">    <span class="title class_">Route</span>::<span class="keyword">match</span>([<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;post&#x27;</span>],<span class="string">&#x27;nothree/&#123;uid&#125;&#x27;</span>,<span class="string">&#x27;TrController@noThree&#x27;</span>)-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;uid&#x27;</span>, <span class="string">&#x27;[0-9]+&#x27;</span>);</span><br><span class="line">    <span class="comment">//get或者post请求，一个参数，以及正则匹配是否是数字</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>统一的加上了admin前缀，<code>prefix(&#39;前缀&#39;)</code></p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/22/5a8ebf66bb681.png"
                     
                ></p>
<blockquote>
<p><code>group()</code>是一个路由组，把一些路由放在一起，添加中间件等等</p>
</blockquote>
<p>这里我们在深入一些.</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//index.blade.php</span></span><br><span class="line"></span><br><span class="line">视图名 index.blade.php</span><br><span class="line">返回内容&#123;&#123;<span class="variable">$uid</span>&#125;&#125;---&#123;&#123;<span class="variable">$name</span>&#125;&#125;</span><br></pre></td></tr></table></figure></div>
<p>视图</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//web.php</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">prefix</span>(<span class="string">&#x27;admin&#x27;</span>)-&gt;<span class="title function_ invoke__">namespace</span>(<span class="string">&#x27;Admin&#x27;</span>)-&gt;<span class="title function_ invoke__">group</span>(function () &#123;</span><br><span class="line">        <span class="title class_">Route</span>::<span class="keyword">match</span>([<span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;post&#x27;</span>], <span class="string">&#x27;nothree/&#123;uid&#125;/&#123;name&#125;&#x27;</span>, <span class="string">&#x27;AucController@noThree&#x27;</span>)</span><br><span class="line">            -&gt;<span class="title function_ invoke__">where</span>([</span><br><span class="line">                <span class="string">&#x27;uid&#x27;</span> =&gt; <span class="string">&#x27;[0-9]+&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;[a-z]+&#x27;</span></span><br><span class="line">            ]);</span><br><span class="line">        <span class="comment">//get或者post请求，一个参数，以及正则匹配是否是数字</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div>

<p>路由，prefix设置前缀，namespace是命名空间，如果一个项目有很多控制器，<br>把它们全部放到<code>app\Http\Controllers</code>,是不太好，<br>还有一些需求，有相同的控制器名称，<br>可以多分一些子目录，Admin、Home、Article…<br>这个时候namespace就派上用场了</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//artisan创建也是能加目录的</span></span><br><span class="line">php artisan make:controller Admin/AucController</span><br></pre></td></tr></table></figure></div>

<p>我们可以新建控制器到Admin目录.</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//AucController.php</span></span><br><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">noThree</span>(<span class="params"><span class="variable">$uid</span>,<span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//返回一个视图,并传值到视图</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">view</span>(<span class="string">&#x27;studys.index&#x27;</span>)-&gt;<span class="title function_ invoke__">with</span>(<span class="title function_ invoke__">compact</span>(<span class="string">&#x27;uid&#x27;</span>,<span class="string">&#x27;name&#x27;</span>));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/22/5a8ecab5b40b7.png"
                     
                ></p>
<p>注意这里的参数接收是按顺序来的，如果换成<code>noThree($name,$uid)</code>,<br>那么两个值就uid接的是name、name接的是uid.</p>
<blockquote>
<p>我们访问<code>http://laravel.study/admin/nothree/6666/Useri</code>.</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/22/5a8ecacb36c30.png"
                     
                ></p>
<p>还有一点，路由参数的约束，如果每个路由都要约束同样的参数，<br>代码就冗余了，<code>Laravel</code>也帮我们想到了.</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//app\Providers\RouteServiceProvider.php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="title class_">Route</span>::<span class="title function_ invoke__">pattern</span>(<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;[0-9]+&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">parent</span>::<span class="title function_ invoke__">boot</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>在<code>RouteServiceProvider</code>中<code>boot</code>方法添加.<br>这属于全局约束，参数为<code>id</code>的都能被<code>[0-9]+&#39;</code>约束到.</p>
<p>End</p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>laravel</tag>
        <tag>入门</tag>
        <tag>Route</tag>
      </tags>
  </entry>
  <entry>
    <title>Laravel5.6入门(六)</title>
    <url>/2018/02/23/Laravel5-6%E5%85%A5%E9%97%A8-%E5%85%AD/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>laravel5.6学习记录，学习最新的版本</p>
<span id="more"></span>
<ul>
<li>Laravel文档<a class="link"   href="https://laravel.com/" >Laravel <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>开发工具<a class="link"   href="https://laravel.com/" >Phpstorm <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>开发环境<a class="link"   href="https://laravel.com/docs/5.6/homestead" >Homestead <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>中文文档<a class="link"   href="https://d.laravel-china.org/docs/5.5/" >Laravel-China <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>Composer<a class="link"   href="https://getcomposer.org/" >Composer <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h2 id="Laravel5-6"><a href="#Laravel5-6" class="headerlink" title="Laravel5.6"></a>Laravel5.6</h2><!--more-->

<h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><p>讲了控制器和路由，我们来讲一下数据库.</p>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>要使用数据库，当然要先配置，才能连上数据库使用.<br>数据库的配置主要有两个地方.</p>
<ol>
<li><code>.env</code>文件，包涵较多的配置项，当然也包括数据库的信息，</li>
<li><code>config/database.php</code> 里面包括了数据库、数据库驱动、Redis等.</li>
</ol>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//.env</span></span><br><span class="line">DB_CONNECTION=mysql</span><br><span class="line">DB_HOST=<span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line">DB_PORT=<span class="number">3306</span></span><br><span class="line">DB_DATABASE=homestead</span><br><span class="line">DB_USERNAME=homestead</span><br><span class="line">DB_PASSWORD=secret</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//config/database.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;default&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;DB_CONNECTION&#x27;</span>, <span class="string">&#x27;mysql&#x27;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;connections&#x27;</span> =&gt; [</span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;sqlite&#x27;</span> =&gt; [</span><br><span class="line">            <span class="string">&#x27;driver&#x27;</span> =&gt; <span class="string">&#x27;sqlite&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;database&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;DB_DATABASE&#x27;</span>, <span class="title function_ invoke__">database_path</span>(<span class="string">&#x27;database.sqlite&#x27;</span>)),</span><br><span class="line">            <span class="string">&#x27;prefix&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        ],</span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;mysql&#x27;</span> =&gt; [</span><br><span class="line">            <span class="string">&#x27;driver&#x27;</span> =&gt; <span class="string">&#x27;mysql&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;host&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;127.0.0.1&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;port&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;DB_PORT&#x27;</span>, <span class="string">&#x27;3306&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;database&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;DB_DATABASE&#x27;</span>, <span class="string">&#x27;forge&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;DB_USERNAME&#x27;</span>, <span class="string">&#x27;forge&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;unix_socket&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;DB_SOCKET&#x27;</span>, <span class="string">&#x27;&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;charset&#x27;</span> =&gt; <span class="string">&#x27;utf8mb4&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;collation&#x27;</span> =&gt; <span class="string">&#x27;utf8mb4_unicode_ci&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;prefix&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;strict&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&#x27;engine&#x27;</span> =&gt; <span class="literal">null</span>,</span><br><span class="line">        ],</span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;pgsql&#x27;</span> =&gt; [</span><br><span class="line">            <span class="string">&#x27;driver&#x27;</span> =&gt; <span class="string">&#x27;pgsql&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;host&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;127.0.0.1&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;port&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;DB_PORT&#x27;</span>, <span class="string">&#x27;5432&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;database&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;DB_DATABASE&#x27;</span>, <span class="string">&#x27;forge&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;DB_USERNAME&#x27;</span>, <span class="string">&#x27;forge&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;charset&#x27;</span> =&gt; <span class="string">&#x27;utf8&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;prefix&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;schema&#x27;</span> =&gt; <span class="string">&#x27;public&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;sslmode&#x27;</span> =&gt; <span class="string">&#x27;prefer&#x27;</span>,</span><br><span class="line">        ],</span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;sqlsrv&#x27;</span> =&gt; [</span><br><span class="line">            <span class="string">&#x27;driver&#x27;</span> =&gt; <span class="string">&#x27;sqlsrv&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;host&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;port&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;DB_PORT&#x27;</span>, <span class="string">&#x27;1433&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;database&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;DB_DATABASE&#x27;</span>, <span class="string">&#x27;forge&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;DB_USERNAME&#x27;</span>, <span class="string">&#x27;forge&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;charset&#x27;</span> =&gt; <span class="string">&#x27;utf8&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;prefix&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        ],</span><br><span class="line"></span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;migrations&#x27;</span> =&gt; <span class="string">&#x27;migrations&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;redis&#x27;</span> =&gt; [</span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;client&#x27;</span> =&gt; <span class="string">&#x27;predis&#x27;</span>,</span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;default&#x27;</span> =&gt; [</span><br><span class="line">            <span class="string">&#x27;host&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;REDIS_HOST&#x27;</span>, <span class="string">&#x27;127.0.0.1&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;REDIS_PASSWORD&#x27;</span>, <span class="literal">null</span>),</span><br><span class="line">            <span class="string">&#x27;port&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;REDIS_PORT&#x27;</span>, <span class="number">6379</span>),</span><br><span class="line">            <span class="string">&#x27;database&#x27;</span> =&gt; <span class="number">0</span>,</span><br><span class="line">        ],</span><br><span class="line"></span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">];</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<p>配置项都很简单，数据库名、账号、密码、端口设置上就ok.<br>配置文件的可读性很高.<br><code>database</code>中用的<code>env()</code>函数读取<code>.env</code>文件的配置项.</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;default&#x27;</span> =&gt; <span class="title function_ invoke__">env</span>(<span class="string">&#x27;DB_CONNECTION&#x27;</span>, <span class="string">&#x27;mysql&#x27;</span>),</span><br><span class="line"><span class="comment">//env(),传两个参数，第一个是`.env`里的配置项，第二个是默认值.</span></span><br><span class="line"><span class="comment">//如果配置项没有值，就使用设置的默认值.</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<p>看你的需求，如果不会更换的就可以写死，也就是写到默认值里，<br>如果频繁更换，或者线下线上的配置区分，就写到<code>.env</code>里，<br>上线只需要改一份配置就好了.</p>
<blockquote>
<p><code>.env</code> 在<code>.gitignore</code>中，是属于git忽略文件，也能保证一些安全问题，这里不细说.</p>
</blockquote>
<p>修改配置的时候，我们也可以顺便修改下通用配置.</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//.env</span></span><br><span class="line">APP_NAME=Laravel</span><br><span class="line">APP_ENV=local</span><br><span class="line">APP_KEY=base64:****************=</span><br><span class="line">APP_DEBUG=<span class="literal">true</span></span><br><span class="line">APP_URL=http:<span class="comment">//localhost</span></span><br><span class="line"><span class="comment">//名称、环境、是否开启debug(显示一些详细错误信息)、以及域名等.</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//我们主要改几个地方,其他的按照自己的需求</span></span><br><span class="line"><span class="comment">//上面的配置也在app.php中</span></span><br><span class="line"><span class="comment">//config/app.php</span></span><br><span class="line"><span class="comment">//时区默认&#x27;UTC&#x27;改为&#x27;PRC&#x27; 中国时区</span></span><br><span class="line"><span class="string">&#x27;timezone&#x27;</span> =&gt; <span class="string">&#x27;PRC&#x27;</span>,</span><br><span class="line"><span class="comment">//这是语言，如果有其他语言包，本地化需要.</span></span><br><span class="line"><span class="comment">//语言包位于 resources/lang/ 下，默认en</span></span><br><span class="line"><span class="string">&#x27;locale&#x27;</span> =&gt; <span class="string">&#x27;en&#x27;</span>, </span><br></pre></td></tr></table></figure></div>

<p>配置完成,怎么使用呢？</p>
<h4 id="Migration"><a href="#Migration" class="headerlink" title="Migration"></a>Migration</h4><p><code>laravel</code>下使用<code>migration</code>来创建数据库迁移文件…</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">php artisan make:migration create_protables_table</span><br><span class="line">//如果需要指定表名，可以使用 --create 和 --table.</span><br><span class="line">php artisan make:migration create_protables_table --create=protables</span><br></pre></td></tr></table></figure></div>

<p>还有我们前面讲模型的时候，<code>-m</code>参数顺便创建的迁移文件.<br>这也算一种迁移文件的创建.</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">php make:model Protable -m</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/23/5a8ff9ec94075.png"
                     
                ></p>
<p>创建的迁移文件都位于<code>database/migrations</code> 下.</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/23/5a8ffa5332ac8.png"
                     
                ></p>
<p>迁移文件里面有<code>up() down()</code>两个方法,<code>up</code>是正向操作,’down’则是反向操作.</p>
<p>我们来添加一些简单的字段.</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//database/migrations/2018_02_23_112021_create_protables_table.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Schema</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Schema</span>\<span class="title">Blueprint</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Migrations</span>\<span class="title">Migration</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CreateProtablesTable</span> <span class="keyword">extends</span> <span class="title">Migration</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">up</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title class_">Schema</span>::<span class="title function_ invoke__">create</span>(<span class="string">&#x27;protables&#x27;</span>, function (Blueprint <span class="variable">$table</span>) &#123;</span><br><span class="line">        	<span class="comment">//创建一个protables表</span></span><br><span class="line">            <span class="variable">$table</span>-&gt;<span class="title function_ invoke__">increments</span>(<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line">            <span class="comment">//默认的自增id字段</span></span><br><span class="line">            <span class="variable">$table</span>-&gt;<span class="keyword">string</span>(<span class="string">&#x27;username&#x27;</span>);</span><br><span class="line">            <span class="comment">//string() 相当于varchar</span></span><br><span class="line">            <span class="variable">$table</span>-&gt;<span class="keyword">string</span>(<span class="string">&#x27;phone&#x27;</span>,<span class="number">100</span>)-&gt;<span class="title function_ invoke__">unique</span>();</span><br><span class="line">            <span class="comment">//带长度的varchar,unique()不重复</span></span><br><span class="line">            <span class="variable">$table</span>-&gt;<span class="keyword">string</span>(<span class="string">&#x27;password&#x27;</span>)-&gt;<span class="title function_ invoke__">commit</span>(<span class="string">&#x27;密码&#x27;</span>);</span><br><span class="line">            <span class="comment">//commit()是注释</span></span><br><span class="line">            <span class="variable">$table</span>-&gt;<span class="keyword">integer</span>(<span class="string">&#x27;user_id&#x27;</span>)-&gt;<span class="keyword">default</span>(<span class="number">0</span>);</span><br><span class="line">            <span class="comment">//integer() INTEGER</span></span><br><span class="line">            <span class="comment">//default() 是默认值</span></span><br><span class="line">            <span class="variable">$table</span>-&gt;<span class="title function_ invoke__">text</span>(<span class="string">&#x27;content&#x27;</span>)-&gt;<span class="title function_ invoke__">commit</span>(<span class="string">&#x27;内容&#x27;</span>);</span><br><span class="line">            <span class="variable">$table</span>-&gt;<span class="title function_ invoke__">timestamps</span>();</span><br><span class="line">            <span class="comment">//timestamps() 会生成以下两个字段</span></span><br><span class="line">            <span class="comment">//`created_at` 创建时间</span></span><br><span class="line">            <span class="comment">//`updated_at` 更新时间</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">down</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    	<span class="comment">//dropIfExists()逆向操作，如果存在此表就删除</span></span><br><span class="line">    	<span class="comment">//最好是加上这句.</span></span><br><span class="line">        <span class="title class_">Schema</span>::<span class="title function_ invoke__">dropIfExists</span>(<span class="string">&#x27;protables&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">//常用的字段修饰</span><br><span class="line">string() 相当于varchar 第一个参数是字段名，第二个参数可带长度(可选)</span><br><span class="line">integer()</span><br><span class="line">text() </span><br><span class="line">boolean() boolean</span><br><span class="line">decimal() double() float() 浮点数</span><br><span class="line">increments() 递增主键(unsigned)</span><br><span class="line">---</span><br><span class="line">//字段修饰符</span><br><span class="line">-&gt;commit() 注释</span><br><span class="line">-&gt;default() 默认值</span><br><span class="line">-&gt;unsigned() UNSIGEND</span><br><span class="line">-&gt;unique()  UNIQUE</span><br><span class="line">-&gt;nullable() 可以为null</span><br><span class="line">-&gt;charset(&#x27;utf8&#x27;) 指定编码</span><br></pre></td></tr></table></figure></div>

<p>迁移文件ok了，然后该生成了.</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">php artisan migrate</span><br></pre></td></tr></table></figure></div>

<p>执行的时候就会执行迁移文件中的up()方法，来创建表.</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/23/5a90016641e35.png"
                     
                ></p>
<p>我们查看下数据库，(图形化还没装),就先用控制台将就看着.</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/23/5a90020baa568.png"
                     
                ></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">| migrations       | //迁移的记录</span><br><span class="line">| password_resets  | //默认的找回密码表</span><br><span class="line">| protables        | //我们创建的表</span><br><span class="line">| users 		   | //默认的用户表</span><br></pre></td></tr></table></figure></div>

<p>看到一句成功创建完成.</p>
<h4 id="Migrate错误"><a href="#Migrate错误" class="headerlink" title="Migrate错误"></a>Migrate错误</h4><p>有时候也不可能顺风顺水，也会报一些错误.</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Illuminate\Database\QueryException]</span><br><span class="line">SQLSTATE[42000]: Syntax error or access violation: 1071 Specified key was too long; max key length is 767 bytes (SQL: alter table users add unique users_email_unique(email))</span><br><span class="line"></span><br><span class="line">[PDOException]</span><br><span class="line">SQLSTATE[42000]: Syntax error or access violation: 1071 Specified key was too long; max key length is 767 bytes</span><br></pre></td></tr></table></figure></div>

<p><code>laravel5.4</code>后使用的默认编码是<code>utf8mb4 </code>,<br>编码区别和数据库版本不同，执行命令的时候，<br>或许会报以上的错误,解决方法也比较简单.</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//app\Providers\AppServiceProvider.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Schema</span>; <span class="comment">//use这个</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//在boot方法中添加</span></span><br><span class="line">    <span class="title class_">Schema</span>::<span class="title function_ invoke__">defaultStringLength</span>(<span class="number">191</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>完成后，再次执行migrate命令，应该就ok了</p>
<h4 id="迁移回滚"><a href="#迁移回滚" class="headerlink" title="迁移回滚"></a>迁移回滚</h4><p>如果麒麟臂过快，不小心就执行了migrate后，不想要了，想要撤回迁移,<br>也有<code>rollback</code>帮我们解决.</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">php artisan migrate:rollback</span><br></pre></td></tr></table></figure></div>

<p>执行的时候就会执行迁移文件中的down(),来删除表.</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/23/5a9006fdc5815.png"
                     
                ></p>
<p>这就方便的回滚了最近的一次<code>migrate</code>操作，一次操作可能会包含多个迁移文件.<br>如果想限制回滚次数,7次、5次、3次，只需要加上 <code>--step=次数</code></p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">php artisan migrate:rollback --step=7</span><br><span class="line">//回滚最近7次迁移操作</span><br></pre></td></tr></table></figure></div>

<p>是不是很Easy，如果你绝望了，放弃了，需要重构了，没关系，<br>一个命令解决你问题.</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">php artisan migrate:reset</span><br><span class="line">//回滚所有迁移，归零</span><br></pre></td></tr></table></figure></div>

<h4 id="更新数据表"><a href="#更新数据表" class="headerlink" title="更新数据表"></a>更新数据表</h4><p>按业务需求，假如后期需要添加逻辑，需要新的字段，<br>也不可能一次次回滚来修改，<br>我们就要来更新数据表了，创建一个新的迁移文件.</p>
<blockquote>
<p>需求，添加一个<code>email</code>字段</p>
</blockquote>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">php artisan make:migration add_email_to_protables_table</span><br></pre></td></tr></table></figure></div>

<p>创建了一个迁移文件,<br><code>2018_02_23_124340_add_email_to_protables_table.php</code></p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">up</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="title class_">Schema</span>::<span class="title function_ invoke__">table</span>(<span class="string">&#x27;protables&#x27;</span>, function (Blueprint <span class="variable">$table</span>) &#123;</span><br><span class="line">        <span class="variable">$table</span>-&gt;<span class="keyword">string</span>(<span class="string">&#x27;email&#x27;</span>)-&gt;<span class="title function_ invoke__">unique</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">down</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="title class_">Schema</span>::<span class="title function_ invoke__">dropIfExists</span>(<span class="string">&#x27;protables&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>这里注意，创建表的时候，是<code>Schema::create</code>，<br>修改表的时候,是<code>Schema::table</code>,第一个参数就是表名,<br><code>down()</code>里面我们也加上逆向操作需要的,<br><code>Schema::dropIfExists</code>就是判断并删除表.</p>
<p>执行迁移命令，查看数据表结构.<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/23/5a9010080b7c8.png"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/23/5a90103dad28b.png"
                     
                ></p>
<h2 id="ok啦！"><a href="#ok啦！" class="headerlink" title="ok啦！"></a>ok啦！</h2><h2 id="Laravel内容丰富、知识也很多，文章写的可能很杂乱，或许也像抄读文档-见谅"><a href="#Laravel内容丰富、知识也很多，文章写的可能很杂乱，或许也像抄读文档-见谅" class="headerlink" title="Laravel内容丰富、知识也很多，文章写的可能很杂乱，或许也像抄读文档,见谅."></a><code>Laravel</code>内容丰富、知识也很多，<br>文章写的可能很杂乱，或许也像抄读文档,见谅.</h2><p>End.</p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>laravel</tag>
        <tag>Database</tag>
      </tags>
  </entry>
  <entry>
    <title>Laravel5.6入门(四)</title>
    <url>/2018/02/22/Laravel5-6%E5%85%A5%E9%97%A8-%E5%9B%9B/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>laravel5.6学习记录，学习最新的版本</p>
<span id="more"></span>
<ul>
<li>Laravel文档<a class="link"   href="https://laravel.com/" >Laravel <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>开发工具<a class="link"   href="https://laravel.com/" >Phpstorm <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>开发环境<a class="link"   href="https://laravel.com/docs/5.6/homestead" >Homestead <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>中文文档<a class="link"   href="https://d.laravel-china.org/docs/5.5/" >Laravel-China <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>Composer<a class="link"   href="https://getcomposer.org/" >Composer <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h2 id="Laravel5-6"><a href="#Laravel5-6" class="headerlink" title="Laravel5.6"></a>Laravel5.6</h2><!--more-->

<h3 id="控制器和路由"><a href="#控制器和路由" class="headerlink" title="控制器和路由"></a>控制器和路由</h3><p>控制器和路由我们都讲了一些，这篇我们结合在一起讲讲.<br>新创建了个普通控制器，<code>TrController</code>来测试.<br>我们先在控制器里创建几个方法，来和路由交互.</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//app\Http\Controllers\TrController.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">App</span>\<span class="title class_">Http</span>\<span class="title class_">Controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TrController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">noOne</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//普通的返回</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;这是第一个函数&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">noTwo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;这是第二个函数&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">noThree</span>(<span class="params"><span class="variable">$uid</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//返回一个视图,并传值到视图</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">view</span>(<span class="string">&#x27;studys.index&#x27;</span>)-&gt;<span class="title function_ invoke__">with</span>(<span class="title function_ invoke__">compact</span>(<span class="string">&#x27;uid&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<p>转到路由,我们把前几篇文章的知识点稍微结合一下.</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//web.php</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;/noone&#x27;</span>,<span class="string">&#x27;TrController@noOne&#x27;</span>);</span><br><span class="line"><span class="comment">//get请求</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="title function_ invoke__">any</span>(<span class="string">&#x27;/notwo&#x27;</span>,<span class="string">&#x27;TrController@noTwo&#x27;</span>)-&gt;<span class="title function_ invoke__">name</span>(<span class="string">&#x27;notwo&#x27;</span>);</span><br><span class="line"><span class="comment">//所有请求，命名路由</span></span><br><span class="line"><span class="title class_">Route</span>::<span class="keyword">match</span>([<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;post&#x27;</span>],<span class="string">&#x27;/nothree/&#123;uid&#125;&#x27;</span>,<span class="string">&#x27;TrController@noThree&#x27;</span>)-&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;uid&#x27;</span>, <span class="string">&#x27;[0-9]+&#x27;</span>);</span><br><span class="line"><span class="comment">//get或者post请求，一个参数，以及正则匹配是否是数字</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<p>修改下<code>studys.index</code>视图的内容，接收参数.</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line">视图名 index.blade.php</span><br><span class="line">返回内容&#123;&#123;<span class="variable">$uid</span>&#125;&#125;</span><br></pre></td></tr></table></figure></div>

<p>我们分别访问测试.</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/22/5a8ebb8aaa635.png"
                     
                ></p>
<p><code>noThree($uid)</code>方法接收传来的值，传给视图，<a class="link"   href="http://www.runoob.com/php/func-array-compact.html" >Compact <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>,视图方面接收显示<code>&#123;&#123;变量名&#125;&#125;</code>.</p>
<p>End.</p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>laravel</tag>
        <tag>入门</tag>
        <tag>Controller</tag>
        <tag>Model</tag>
      </tags>
  </entry>
  <entry>
    <title>Laravel5.6入门(一)</title>
    <url>/2018/02/22/Laravel5.6%E5%85%A5%E9%97%A8-%E4%B8%80/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>laravel5.6学习记录，学习最新的版本</p>
<span id="more"></span>
<ul>
<li>Laravel文档<a class="link"   href="https://laravel.com/" >Laravel <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>开发工具<a class="link"   href="https://laravel.com/" >Phpstorm <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>开发环境<a class="link"   href="https://laravel.com/docs/5.6/homestead" >Homestead <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>中文文档<a class="link"   href="https://d.laravel-china.org/docs/5.5/" >Laravel-China <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>Composer<a class="link"   href="https://getcomposer.org/" >Composer <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h2 id="Laravel5-6"><a href="#Laravel5-6" class="headerlink" title="Laravel5.6"></a>Laravel5.6</h2><!--more-->

<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><code>Laravel</code>有很多种安装方式,官方文档介绍两种</p>
<blockquote>
<p>第一种是直接使用 composer create-project 创建<code>Laravel</code>项目,也是我主要使用的方式</p>
</blockquote>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">composer create-project --prefer-dist laravel/laravel laravel-study</span><br></pre></td></tr></table></figure></div>

<p>(可选)如果要指定版本，<code>laravel/laravel=版本号</code></p>
<!--more-->
<blockquote>
<p>第二种方式是使用 laravel 的安装器；</p>
</blockquote>
<!--more-->
<p>下载<code>Laravel</code>安装器</p>
<blockquote>
<p>确保 $HOME&#x2F;.composer&#x2F;vendor&#x2F;bin 目录（或你的操作系统的等效目录）已经放在你的环境变量 $PATH 中，以便系统可以找到 laravel 的可执行文件。</p>
</blockquote>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">composer global require <span class="string">&quot;laravel/installer&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>然后就能直接new新项目了</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">laravel new laravel-study</span><br></pre></td></tr></table></figure></div>

<p>这里使用的是homestead，安装<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/22/5a8e6ec3624f8.png"
                     
                ><br>看到<code>set successfully.</code>，就完成了<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/22/5a8e6f0d8c314.png"
                     
                ></p>
<p>可以设置一些权限</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo chmod -R 777 storage</span><br><span class="line">sudo chmod -R 755 public</span><br></pre></td></tr></table></figure></div>
<blockquote>
<p>因为本地开发可以适当给高一点</p>
</blockquote>
<h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><!--more-->
<blockquote>
<p>安装完成，导入phpstorm</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/22/5a8e730c5eb6f.png"
                     
                ></p>
<ul>
<li>App 目录包含了应用的核心代码，大部分代码编写都在里面.<ul>
<li>Http&#x2F;Controllers 控制器目录.</li>
<li>Http&#x2F;Middleware 中间件目录.</li>
</ul>
</li>
<li>Bootstrap 框架的自动载入和缓存等文件.</li>
<li>Config 所有的配置文件.</li>
<li>Database 关于数据库的迁移和填充文件.</li>
<li>Public 程序入口以及一些静态文件.<ul>
<li>index.php 程序入口</li>
</ul>
</li>
<li>Resources 视图、前端资源、语言包等<ul>
<li>Views 模板视图目录</li>
</ul>
</li>
<li>Routes 路由目录<ul>
<li>web.php 常用</li>
</ul>
</li>
<li>Vendor 通过Composer加载的依赖</li>
<li>.env 一些秘钥，账号配置</li>
</ul>
<blockquote>
<p>只简洁的说了几个常用的，如果需要详细了解，可以看<a class="link"   href="https://d.laravel-china.org/docs/5.5/structure" >目录结构 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<p>配置好Homestead，设置域名，重启加载配置</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">//hosts</span><br><span class="line">192.168.10.10	laravel.study</span><br><span class="line">//Homestead.yaml</span><br><span class="line">sites:</span><br><span class="line">    - map: laravel.study</span><br><span class="line">      to: /home/vagrant/code/laravel-study/public</span><br></pre></td></tr></table></figure></div>

<p>就能访问 <code>http://laravel.study/</code>查看</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/22/5a8e7906773f7.png"
                     
                ></p>
<p>End.</p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>laravel</tag>
        <tag>入门</tag>
      </tags>
  </entry>
  <entry>
    <title>Node&amp;npm笔记</title>
    <url>/2018/03/21/Node-npm%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>记一些Node&amp;Npm使用记录</p>
<h3 id="Node升级"><a href="#Node升级" class="headerlink" title="Node升级"></a>Node升级</h3><p>以下命令,Linux可能需要权限</p>
<blockquote>
<p>npm install -g n<br>n latest</p>
</blockquote>
<p>如果windows下面报错,windows版本可以尝试下载官方的msi软件包覆盖安装,也是可行的</p>
<h3 id="Npm升级"><a href="#Npm升级" class="headerlink" title="Npm升级"></a>Npm升级</h3><blockquote>
<p>npm install -g npm</p>
</blockquote>
<h3 id="Npm更新"><a href="#Npm更新" class="headerlink" title="Npm更新"></a>Npm更新</h3><p>更新全局可更新的包</p>
<blockquote>
<p>npm update -g </p>
</blockquote>
<p>更新package.json可更新的包</p>
<blockquote>
<p>npm update</p>
</blockquote>
<p>检查npm包的状态</p>
<blockquote>
<p>npm-check -u -g</p>
</blockquote>
<p>查看哪些包有更新</p>
<blockquote>
<p>npm -g outdated </p>
</blockquote>
<p>全局安装</p>
<blockquote>
<p>npm install -g</p>
</blockquote>
<h3 id="Nrm的使用"><a href="#Nrm的使用" class="headerlink" title="Nrm的使用"></a>Nrm的使用</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><blockquote>
<p>npm install -g nrm</p>
</blockquote>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>显示registry可用列表</p>
<blockquote>
<p>nrm ls</p>
</blockquote>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ nrm ls</span><br><span class="line"></span><br><span class="line">* npm ---- https://registry.npmjs.org/</span><br><span class="line">  cnpm --- http://r.cnpmjs.org/</span><br><span class="line">  eu ----- http://registry.npmjs.eu/</span><br><span class="line">  au ----- http://registry.npmjs.org.au/</span><br><span class="line">  sl ----- http://npm.strongloop.com/</span><br><span class="line">  nj ----- https://registry.nodejitsu.com/</span><br></pre></td></tr></table></figure></div>

<p>使用registry</p>
<blockquote>
<p>nrm use cnpm</p>
</blockquote>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ nrm use cnpm </span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; Registry has been set to: http://r.cnpmjs.org/</span><br></pre></td></tr></table></figure></div>

<p>测试registry的延迟</p>
<blockquote>
<p>nrm test</p>
</blockquote>
<p>END.</p>
]]></content>
      <categories>
        <category>nodejs</category>
      </categories>
      <tags>
        <tag>Node</tag>
        <tag>Npm</tag>
      </tags>
  </entry>
  <entry>
    <title>PhpStorm小记</title>
    <url>/2024/04/08/PhpStorm%E5%B0%8F%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>记录一些phpstorm的小设置，持续更新</p>
<h2 id="设置开启时选择项目"><a href="#设置开启时选择项目" class="headerlink" title="设置开启时选择项目"></a>设置开启时选择项目</h2><blockquote>
<p>关掉选项</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://i.loli.net/2018/02/22/5a8e526315ff7.png"
                     
                ></p>
<h2 id="替换默认的Terminal为Cmder"><a href="#替换默认的Terminal为Cmder" class="headerlink" title="替换默认的Terminal为Cmder"></a>替换默认的Terminal为Cmder</h2><blockquote>
<p>cmder是windows下非常好用的控制台</p>
</blockquote>
<h3 id="添加CMDER-ROOT到系统变量"><a href="#添加CMDER-ROOT到系统变量" class="headerlink" title="添加CMDER_ROOT到系统变量"></a>添加CMDER_ROOT到系统变量</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ww2.sinaimg.cn/large/a15b4afegy1fooggr3yajj20i8056t8y.jpg"
                     
                ></p>
<blockquote>
<p>变量值是cmder根目录</p>
</blockquote>
<h3 id="设置phpstorm-Tools-terminal-Shell-Path"><a href="#设置phpstorm-Tools-terminal-Shell-Path" class="headerlink" title="设置phpstorm-&gt;Tools-&gt;terminal-&gt;Shell Path"></a>设置phpstorm-&gt;Tools-&gt;terminal-&gt;Shell Path</h3><div class="highlight-container" data-rel="Bat"><figure class="iseeu highlight bat"><table><tr><td class="code"><pre><span class="line">//正常</span><br><span class="line">&quot;<span class="built_in">cmd</span>.exe&quot; /k &quot;<span class="variable">%CMDER_ROOT%</span>\vendor\init.bat&quot;</span><br><span class="line">//有空格的</span><br><span class="line">&quot;<span class="built_in">cmd</span>.exe&quot; /k &quot;&quot;<span class="variable">%CMDER_ROOT%</span>\vendor\init.bat&quot;&quot;</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ww2.sinaimg.cn/large/a15b4afegy1foogk3o43yj20ma074js8.jpg"
                     
                ></p>
<blockquote>
<p>外面套的多一层双引号是因为我的路径里面有空格,<br>然后应用,<code>Alt+F12</code>呼出Terminal看看效果。</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ww2.sinaimg.cn/large/a15b4afegy1fooguuaqw8j20ik09k74m.jpg"
                     
                ></p>
<blockquote>
<p>反正比cmd好看就对了</p>
</blockquote>
<h3 id="可选-设置console字体样式"><a href="#可选-设置console字体样式" class="headerlink" title="(可选)设置console字体样式"></a>(可选)设置console字体样式</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ww2.sinaimg.cn/large/a15b4afegy1foogx1j2c9j20lk08m3z9.jpg"
                     
                ></p>
<h2 id="替换默认的Terminal为GitBash"><a href="#替换默认的Terminal为GitBash" class="headerlink" title="替换默认的Terminal为GitBash"></a>替换默认的Terminal为GitBash</h2><h3 id="设置phpstorm-Tools-terminal-Shell-Path-1"><a href="#设置phpstorm-Tools-terminal-Shell-Path-1" class="headerlink" title="设置phpstorm-&gt;Tools-&gt;terminal-&gt;Shell Path"></a>设置phpstorm-&gt;Tools-&gt;terminal-&gt;Shell Path</h3><blockquote>
<p>步骤其实是一样的，只是参数不一样，就不上效果图了</p>
</blockquote>
<div class="highlight-container" data-rel="Bat"><figure class="iseeu highlight bat"><table><tr><td class="code"><pre><span class="line">&quot;Git的安装路径\bin\sh.exe&quot; -login -i</span><br></pre></td></tr></table></figure></div>


<p>END.</p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>PhpStorm</tag>
      </tags>
  </entry>
  <entry>
    <title>Python3.6中遇到UnicodeEncodeError错误</title>
    <url>/2018/10/02/Python3-6%E4%B8%AD%E9%81%87%E5%88%B0UnicodeEncodeError%E9%94%99%E8%AF%AF/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Centos7.3&#x2F;Python3.6.6|中文语言包的安装及中文支持</p>
<h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><p>新系统配置Python环境,运行项目出现编码错误。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">UnicodeEncodeError: &#x27;ascii&#x27; codec can&#x27;t encode characters in ordinal not in range(128)</span><br></pre></td></tr></table></figure></div>

<h2 id="查错"><a href="#查错" class="headerlink" title="查错"></a>查错</h2><blockquote>
<p>遇事不决问百度，万裁难断询谷歌</p>
</blockquote>
<p>一开始搜索发现大部分文章分析是代码编码问题,后来尝试无果。<br>后来猜测可能是编译Python时系统环境编码有问题,经过一通操作，果然解决了，<br>查询了一下，发现网络上果然有些朋友栽在这个坑里,就记录一下解决方案。</p>
<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><h3 id="安装语言"><a href="#安装语言" class="headerlink" title="安装语言"></a>安装语言</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 包括了&quot;zh_CN&quot;</span></span><br><span class="line">yum groupinstall <span class="string">&quot;fonts&quot;</span></span><br></pre></td></tr></table></figure></div>
<p>查看一下是否安装成功</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果有&quot;zh_CN&quot;什么的，应该就成功了</span></span><br><span class="line">locale -a |grep <span class="string">&quot;zh_CN&quot;</span></span><br></pre></td></tr></table></figure></div>

<h3 id="修改语言"><a href="#修改语言" class="headerlink" title="修改语言"></a>修改语言</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/locale.conf</span><br><span class="line"><span class="comment"># LANG=&quot;zh_CN.UTF-8&quot;</span></span><br></pre></td></tr></table></figure></div>

<h3 id="查看语言"><a href="#查看语言" class="headerlink" title="查看语言"></a>查看语言</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看系统语言变量</span></span><br><span class="line">locale</span><br></pre></td></tr></table></figure></div>
<p>会出现好几个”zh_CN.UTF-8”就正常的</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看语言包</span></span><br><span class="line">locale -a</span><br></pre></td></tr></table></figure></div>

<p>如果没有出现错误,就表示中文已经安装成功了,<br>可以尝试一下在终端上操作一下安装删除等操作,<br>看能不能正常输出中文,如果出现错误就单独安装一下。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 只针对Centos7 , 6版本是不一样的</span></span><br><span class="line">yum install kde-l10n-Chinese</span><br><span class="line">yum reinstall glibc-common</span><br></pre></td></tr></table></figure></div>

<p>如果一切没有的问题的话,就可以重新编译一下Python3环境。</p>
<p>END.</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python3.6安装Twisted报错解决</title>
    <url>/2018/07/20/Python3-6%E5%AE%89%E8%A3%85Twisted%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Centos7.4&#x2F;Python3.6.6</p>
<h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><p>安装<code>Scrapy</code>时需要<code>Twisted</code>依赖，使用<code>pip3 install Twisted</code>安装，<br>但是报了一个错误。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">This is the last Twisted release where...</span><br></pre></td></tr></table></figure></div>

<h2 id="查错"><a href="#查错" class="headerlink" title="查错"></a>查错</h2><blockquote>
<p>遇事不决问百度，万裁难断询谷歌</p>
</blockquote>
<p>经过一番搜索后，问题是<code>Twisted</code>模块和高版本Python有兼容性问题，<br>可以选择在官网下载文件然后编译安装。</p>
<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p><a class="link"   href="https://twistedmatrix.com/Releases/Twisted/" >Twisted官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>去官网下载对应的版本，我这里选一个目前最新版本，是支持Python3.6的</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载</span></span><br><span class="line">wget https://twistedmatrix.com/Releases/Twisted/18.7/Twisted-18.7.0.tar.bz2</span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -xvf Twisted-18.7.0.tar.bz2</span><br><span class="line"><span class="comment">#...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入目录</span></span><br><span class="line"><span class="built_in">cd</span> Twisted-18.7.0</span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译安装</span></span><br><span class="line">python3 setup.py install</span><br><span class="line"><span class="comment"># ...</span></span><br></pre></td></tr></table></figure></div>

<p>等待编译完成即可，如果没有什么其他的报错，应该就OK的。</p>
<p>END.</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python常用下载函数</title>
    <url>/2018/07/20/Python%E5%B8%B8%E7%94%A8%E4%B8%8B%E8%BD%BD%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>常用比较万金油的下载函数，记录方便下次调用。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">downloadData</span>(<span class="params">url, **kwargs</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        res = requests.get(url, **kwargs)</span><br><span class="line">        res.raise_for_status()</span><br><span class="line">        res.encoding = res.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> res.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><code>**kwargs</code> 允许你将不定长度的键值对, 作为参数传递给一个函数。<br>如果你想要在一个函数里处理带名字的参数, 你应该使用<code>**kwargs</code>。</p>
</blockquote>
<p>END.</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>TensorFlow v1到v2版本兼容指南</title>
    <url>/2021/09/15/TensorFlow%20v1%E5%88%B0v2%E7%89%88%E6%9C%AC%E5%85%BC%E5%AE%B9%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>记录TensorFlow 中v2版本使用v1代码的各种问题</p>
<h3 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h3><p><strong>Question:</strong></p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> keras.utils <span class="keyword">import</span> multi_gpu_model</span><br><span class="line">ImportError: cannot <span class="keyword">import</span> name <span class="string">&#x27;multi_gpu_model&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;keras.utils&#x27;</span>...</span><br></pre></td></tr></table></figure></div>

<p><strong>Answer:</strong></p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> keras.utils <span class="keyword">import</span> multi_gpu_model</span><br><span class="line"></span><br><span class="line">to:</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> keras.utils.multi_gpu_utils <span class="keyword">import</span> multi_gpu_model</span><br></pre></td></tr></table></figure></div>

<h3 id="问题二"><a href="#问题二" class="headerlink" title="问题二"></a>问题二</h3><p><strong>Question:</strong></p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">ValueError: Subshape must have computed start &gt;= end since stride <span class="keyword">is</span> negative, but <span class="keyword">is</span> <span class="number">0</span> <span class="keyword">and</span> <span class="number">2</span> (computed <span class="keyword">from</span> start <span class="number">0</span> <span class="keyword">and</span> end <span class="number">9223372036854775807</span> over shape <span class="keyword">with</span> rank <span class="number">2</span> <span class="keyword">and</span> stride-<span class="number">1</span>)</span><br></pre></td></tr></table></figure></div>

<p><strong>Answer:</strong></p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">box_xy = (K.sigmoid(feats[..., :<span class="number">2</span>]) + grid) / K.cast(grid_shape[::-<span class="number">1</span>], K.dtype(feats))</span><br><span class="line">box_wh = K.exp(feats[..., <span class="number">2</span>:<span class="number">4</span>]) * anchors_tensor / K.cast(input_shape[::-<span class="number">1</span>], K.dtype(feats))</span><br><span class="line"></span><br><span class="line">to:</span><br><span class="line"></span><br><span class="line">box_xy = (K.sigmoid(feats[..., :<span class="number">2</span>]) + grid) / K.cast(grid_shape[..., ::-<span class="number">1</span>], K.dtype(feats))</span><br><span class="line">box_wh = K.exp(feats[..., <span class="number">2</span>:<span class="number">4</span>]) * anchors_tensor / K.cast(input_shape[..., ::-<span class="number">1</span>], K.dtype(feats))</span><br></pre></td></tr></table></figure></div>

<h3 id="问题三"><a href="#问题三" class="headerlink" title="问题三"></a>问题三</h3><p><strong>Question:</strong></p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">TypeError: Tensors are unhashable. (KerasTensor(type_spec=TensorSpec(shape=(<span class="literal">None</span>, <span class="literal">None</span>, <span class="literal">None</span>, <span class="number">3</span>), dtype=tf.float32, name=<span class="string">&#x27;input_1&#x27;</span>), name=<span class="string">&#x27;input_1&#x27;</span>, description=<span class="string">&quot;created by layer &#x27;input_1&#x27;&quot;</span>))Instead, use tensor.ref() <span class="keyword">as</span> the key.</span><br></pre></td></tr></table></figure></div>

<p><strong>Answer:</strong></p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> keras <span class="keyword">import</span> backend <span class="keyword">as</span> K</span><br><span class="line"></span><br><span class="line">....</span><br><span class="line">self.sess = K.get_session()</span><br><span class="line"></span><br><span class="line">to: </span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> keras <span class="keyword">import</span> backend <span class="keyword">as</span> K</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line">tf.compat.v1.disable_eager_execution()</span><br><span class="line"></span><br><span class="line">.....</span><br><span class="line">self.sess = K.get_session()</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>



<h3 id="问题四"><a href="#问题四" class="headerlink" title="问题四"></a>问题四</h3><p><strong>Question:</strong></p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">ImportError: cannot <span class="keyword">import</span> name <span class="string">&#x27;BatchNormalization&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;keras.layers.norm...</span></span><br></pre></td></tr></table></figure></div>

<p><strong>Answer:</strong></p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> keras.layers.normalization <span class="keyword">import</span> BatchNormalization</span><br><span class="line"></span><br><span class="line">to:</span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> keras.layers.normalization.batch_normalization <span class="keyword">import</span> BatchNormalization</span><br></pre></td></tr></table></figure></div>

<p>END.</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>TensorFlow</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu20.04编译安装Python3</title>
    <url>/2021/06/04/Ubuntu20.04%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85Python3/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>记录下安装过程，以便日后查看。</p>
<ul>
<li>Ubuntu 20.04.2 LTS (使用的Docker ubuntu:latest，可能会与其他环境略有不同。)</li>
<li>Python 3.9.5 (发布前最新版本，其他版本操作相通。)</li>
</ul>
<p>以下操作都是基于ROOT权限下操作，如果不是或者权限不足，请在命令前添加 <code>sudo</code></p>
<h2 id="环境依赖"><a href="#环境依赖" class="headerlink" title="环境依赖"></a>环境依赖</h2><ul>
<li>切换阿里云镜像源加速，Ubuntu 20.04，网络较好可以跳过，如需其他源请自行搜索替换。</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 备份</span></span><br><span class="line"><span class="built_in">cp</span> /etc/apt/sources.list /etc/apt/sources.list.backup</span><br><span class="line"><span class="comment"># 写入</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span></span><br><span class="line"><span class="string">deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span></span><br><span class="line"><span class="string">deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span></span><br><span class="line"><span class="string">deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span></span><br><span class="line"><span class="string">deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span></span><br><span class="line"><span class="string">deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse&quot;</span> &gt; /etc/apt/sources.list</span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line">apt update &amp;&amp; apt upgrade -y</span><br></pre></td></tr></table></figure></div>

<ul>
<li>安装编译Python需要的依赖包，全面安装，为了编译后不出现各种问题，宁错杀一千不放过一个包。</li>
</ul>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 看需求安装 有些包是编译PHP用的 懒得拆分了 有强迫症的可以试试</span></span><br><span class="line">apt install gcc make wget curl build-essential autoconf automake m4 openssl libreadline-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev libffi-dev zlib1g-dev -y</span><br><span class="line">apt install libbz2-dev libxml2-dev libjpeg-dev libpng-dev libfreetype6-dev libzip-dev libssl-dev libsqlite3-dev libcurl4-openssl-dev libgmp3-dev libonig-dev libreadline-dev libxslt1-dev libffi-dev -y</span><br><span class="line"><span class="comment"># apt install libpcre3-dev libjpeg62-dev libpng12-dev libpng3 libpnglite-dev libiconv-hook-dev libiconv-hook1 libmcrypt-dev libmcrypt4 libmhash-dev libmhash2 libltdl-dev libmysqlclient-dev libmagickcore-dev libmagickwand-dev libedit-dev -y</span></span><br></pre></td></tr></table></figure></div>

<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><blockquote>
<p>选择需要的版本下载<code>XZ Compressed source tabball</code>，下载速度慢可以考虑镜像下载。</p>
</blockquote>
<p><a class="link"   href="https://www.python.org/downloads/" >Python下载官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> | <a class="link"   href="https://www.python.org/ftp/python/3.9.5/Python-3.9.5.tar.xz" >Python3.9.5 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://npm.taobao.org/mirrors/python/" >Python下载镜像 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> | <a class="link"   href="https://npm.taobao.org/mirrors/python/3.9.5/Python-3.9.5.tar.xz" >Python3.9.5 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.9.5/Python-3.9.5.tar.xz</span><br><span class="line"><span class="comment"># wget https://npm.taobao.org/mirrors/python/3.9.5/Python-3.9.5.tar.xz</span></span><br></pre></td></tr></table></figure></div>

<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>以<code>Python3.9.5</code>安装为例</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 解包，解压缩</span></span><br><span class="line">xz -d Python-3.9.5.tar.xz</span><br><span class="line">tar -xvf Python-3.9.5.tar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入目录</span></span><br><span class="line"><span class="built_in">cd</span> Python-3.9.5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">./configure --prefix=/usr/local/python3.9.5 --enable-optimizations</span><br><span class="line"><span class="comment"># --prefix=/usr/local/python3.9.5 预安装目录</span></span><br><span class="line"><span class="comment"># --enable-optimizations 是优化选项(LTO，PGO 等)加上这个 flag 编译后，性能有 10% 左右的优化(看需求)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建软链接 方便使用</span></span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/python3.9.5/bin/python3.9 /usr/local/bin/python3.9</span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/python3.9.5/bin/pip3.9 /usr/local/bin/pip3.9</span><br></pre></td></tr></table></figure></div>

<p>等待编译完成即可，如果没有什么其他的报错，应该就OK的。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><blockquote>
<p>使用<code>python3.9 xxx.py</code>和<code>pip3.9 install xxxx</code> </p>
</blockquote>
<p>怎么喜欢怎么来</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@de9bc33b1a58:~# pip3.9 -V</span><br><span class="line">pip 21.1.1 from /usr/local/python3.9.5/lib/python3.9/site-packages/pip (python 3.9)</span><br><span class="line">root@de9bc33b1a58:~# python3.9 -V</span><br><span class="line">Python 3.9.5</span><br><span class="line">root@de9bc33b1a58:~# python3.9</span><br><span class="line">Python 3.9.5 (default, Jun  3 2021, 12:04:16)</span><br><span class="line">[GCC 9.3.0] on linux</span><br><span class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</span><br><span class="line">&gt;&gt;&gt; import requests</span><br><span class="line">&gt;&gt;&gt; print(requests.get(&quot;http://ip-api.com/json&quot;).json())</span><br><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;:&quot;success&quot;,</span><br><span class="line">    &quot;country&quot;:&quot;China&quot;,</span><br><span class="line">    &quot;countryCode&quot;:&quot;*&quot;,</span><br><span class="line">    &quot;region&quot;:&quot;*&quot;,</span><br><span class="line">    &quot;regionName&quot;:&quot;*&quot;,</span><br><span class="line">    &quot;city&quot;:&quot;*&quot;,</span><br><span class="line">    &quot;zip&quot;:&quot;&quot;,</span><br><span class="line">    &quot;lat&quot;:*,</span><br><span class="line">    &quot;lon&quot;:*,</span><br><span class="line">    &quot;timezone&quot;:&quot;Asia/Shanghai&quot;,</span><br><span class="line">    &quot;isp&quot;:&quot;*&quot;,</span><br><span class="line">    &quot;org&quot;:&quot;&quot;,</span><br><span class="line">    &quot;as&quot;:&quot;*&quot;,</span><br><span class="line">    &quot;query&quot;:&quot;*&quot;</span><br><span class="line">&#125;</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure></div>

<h2 id="PIP源"><a href="#PIP源" class="headerlink" title="PIP源"></a>PIP源</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">清华：https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"></span><br><span class="line">阿里云：https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line"></span><br><span class="line">中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/</span><br><span class="line"></span><br><span class="line">豆瓣：https://pypi.doubanio.com/simple/</span><br><span class="line"></span><br><span class="line"># pip3.9 install xxxx -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure></div>

<p>END.</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>和彩云网盘研究记录</title>
    <url>/2021/03/23/%E5%92%8C%E5%BD%A9%E4%BA%91%E7%BD%91%E7%9B%98%E7%A0%94%E7%A9%B6%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>清一色的开篇，目的只为水一篇文章…<br>本次研究对象 <code>和彩云网盘(mCloud)7.3.4</code><br>此记录更偏向于结果，只保证研究版本有效，去年分析的，今年才发，不保证有效  </p>
<h2 id="栗子"><a href="#栗子" class="headerlink" title="栗子"></a>栗子</h2><blockquote>
<p>账密方式登录</p>
</blockquote>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST https://aas.caiyun.feixin.10086.cn/tellin/thirdlogin.do HTTP/1.1</span><br><span class="line">x-DeviceInfo: 1|10.0.3.15|1|7.3.4|Netease|MuMu|87AD2EDF19FFE5D7779D4191937FD5F0|08-00-27-e5-3d-e6|android 6.0.1|900X1600|zh|||</span><br><span class="line">x-ExpRoute-Code: routeCode=18880886001,type=10</span><br><span class="line">Accept-Charset: UTF-8</span><br><span class="line">x-NetType: 1</span><br><span class="line">x-MM-Source: 000</span><br><span class="line">x-SvcType: 1</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;</span><br><span class="line">Connection: keep-alive</span><br><span class="line">x-huawei-channelSrc: 10000023</span><br><span class="line">X-Tingyun-Id: p35OnrDoP8k;c=2;r=1339375589;</span><br><span class="line">Content-Type: text/plain; charset=utf-8</span><br><span class="line">Content-Length: 344</span><br><span class="line">Host: aas.caiyun.feixin.10086.cn</span><br><span class="line">Accept-Encoding: gzip</span><br><span class="line">User-Agent: okhttp/3.11.0</span><br><span class="line"></span><br><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;root&gt;&lt;msisdn&gt;18880886001&lt;/msisdn&gt;&lt;random/&gt;&lt;secinfo&gt;871D0A9E95ABA22B4604224CFBA24E605FABBC34&lt;/secinfo&gt;&lt;version&gt;572&lt;/version&gt;&lt;clienttype&gt;414&lt;/clienttype&gt;&lt;pintype&gt;9&lt;/pintype&gt;&lt;dycpwd/&gt;&lt;cpid&gt;58&lt;/cpid&gt;&lt;verfycode/&gt;&lt;requestip&gt;10.0.2.15&lt;/requestip&gt;&lt;mac/&gt;&lt;extInfo/&gt;&lt;UID/&gt;&lt;loginMode&gt;1&lt;/loginMode&gt;&lt;srvInfoVer/&gt;&lt;/root&gt;</span><br><span class="line"></span><br><span class="line"># 账密正确情况</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Set-Cookie: JSESSIONID=DE25E78BB56608CD1C186B867BF33C67; Path=/tellin/; Secure; HttpOnly</span><br><span class="line">Content-Type: text/plain;charset=utf-8</span><br><span class="line">Content-Length: 4992</span><br><span class="line">Date: Sun, 25 Oct 2020 04:35:41 GMT</span><br><span class="line">Server: HTTPS</span><br><span class="line"></span><br><span class="line">8F5060F5F1158B1CD0C081BA51C02C12DAD4C8F839CE2E44954B1DFE5A7C0137F0FA3FEB366B23A7B9EB4535AC403D0CDF26EB5973C647B26BEB85EBDCA65595AFFC1149A6D387</span><br><span class="line">........</span><br><span class="line"></span><br><span class="line"># 账密错误情况</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Set-Cookie: JSESSIONID=87D4DF3AB2ABD9A5CEB777E26419377F; Path=/tellin/; Secure; HttpOnly</span><br><span class="line">Content-Type: text/plain;charset=utf-8</span><br><span class="line">Content-Length: 86</span><br><span class="line">Date: Sun, 25 Oct 2020 04:33:13 GMT</span><br><span class="line">Server: HTTPS</span><br><span class="line"></span><br><span class="line">&lt;root&gt;&lt;return&gt;200050401&lt;/return&gt;&lt;desc&gt;The user information is incorrect.&lt;/desc&gt;&lt;/root&gt;</span><br></pre></td></tr></table></figure></div>

<p>观察以上登录请求发现加密的东西不少，请求头、请求体、响应体都有不同程度的加密    </p>
<h2 id="请求头-Request-Headers"><a href="#请求头-Request-Headers" class="headerlink" title="请求头(Request Headers)"></a>请求头(Request Headers)</h2><p>只写几个比较重要的，大部分可以为空或者默认值  </p>
<h3 id="x-DeviceInfo"><a href="#x-DeviceInfo" class="headerlink" title="x-DeviceInfo"></a>x-DeviceInfo</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">x-DeviceInfo: 1|10.0.3.15|1|7.3.4|Netease|MuMu|87AD2EDF19FFE5D7779D4191937FD5F0|08-00-27-e5-3d-e6|android 6.0.1|900X1600|zh|||</span><br></pre></td></tr></table></figure></div>

<p>包含的东西比较多，以<code>|</code>分隔数据 ，下面表格按分割后的数据显示  </p>
<table>
<thead>
<tr>
<th>原始数据</th>
<th>代表内容</th>
</tr>
</thead>
<tbody><tr>
<td>1(1)</td>
<td>网络类型</td>
</tr>
<tr>
<td>10.0.3.15</td>
<td>IP地址</td>
</tr>
<tr>
<td>1(2)</td>
<td>固定默认</td>
</tr>
<tr>
<td>7.3.4</td>
<td>SDK版本</td>
</tr>
<tr>
<td>Netease</td>
<td>MANUFACTURER</td>
</tr>
<tr>
<td>MuMu</td>
<td>MODEL</td>
</tr>
<tr>
<td>87AD2EDF19FFE5D7779D4191937FD5F0</td>
<td>生成UUID</td>
</tr>
<tr>
<td>08-00-27-e5-3d-e6</td>
<td>MAC地址</td>
</tr>
<tr>
<td>android 6.0.1</td>
<td>ANDROID版本</td>
</tr>
<tr>
<td>900X1600</td>
<td>分辨率</td>
</tr>
<tr>
<td>zh</td>
<td>默认值</td>
</tr>
<tr>
<td>空</td>
<td>空</td>
</tr>
<tr>
<td>空</td>
<td>空</td>
</tr>
</tbody></table>
<h3 id="x-ExpRoute-Code"><a href="#x-ExpRoute-Code" class="headerlink" title="x-ExpRoute-Code"></a>x-ExpRoute-Code</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">x-ExpRoute-Code: routeCode=18880886001,type=10</span><br></pre></td></tr></table></figure></div>

<table>
<thead>
<tr>
<th>原始数据</th>
<th>代表内容</th>
</tr>
</thead>
<tbody><tr>
<td>routeCode</td>
<td>手机号</td>
</tr>
<tr>
<td>type</td>
<td>如果是手机号登录 默认值为10</td>
</tr>
</tbody></table>
<h2 id="请求体-Request-Payload"><a href="#请求体-Request-Payload" class="headerlink" title="请求体(Request Payload)"></a>请求体(Request Payload)</h2><p>内容组成为XML，大部分可以为空或者默认值  </p>
<h3 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h3><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">msisdn</span>&gt;</span>18880886001<span class="tag">&lt;/<span class="name">msisdn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">random</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">secinfo</span>&gt;</span>871D0A9E95ABA22B4604224CFBA24E605FABBC34<span class="tag">&lt;/<span class="name">secinfo</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>572<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">clienttype</span>&gt;</span>414<span class="tag">&lt;/<span class="name">clienttype</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pintype</span>&gt;</span>9<span class="tag">&lt;/<span class="name">pintype</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dycpwd</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpid</span>&gt;</span>58<span class="tag">&lt;/<span class="name">cpid</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">verfycode</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">requestip</span>&gt;</span>10.0.2.15<span class="tag">&lt;/<span class="name">requestip</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mac</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">extInfo</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">UID</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">loginMode</span>&gt;</span>1<span class="tag">&lt;/<span class="name">loginMode</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">srvInfoVer</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>以下<code>sha-1()</code>、<code>md5()</code>等代表加密方式 , <code>&#123;&#125;</code>代表字符串拼接填充</p>
</blockquote>
<table>
<thead>
<tr>
<th>原始数据</th>
<th>代表内容</th>
</tr>
</thead>
<tbody><tr>
<td>secinfo</td>
<td>sha-1(fetion.com.cn:{password})</td>
</tr>
</tbody></table>
<h2 id="响应体-Response-Payload"><a href="#响应体-Response-Payload" class="headerlink" title="响应体(Response Payload)"></a>响应体(Response Payload)</h2><h3 id="密文"><a href="#密文" class="headerlink" title="密文"></a>密文</h3><p>登录成功后，返回数据为一长串密文，需要搭配上下文的东西解密使用  </p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">8F5060F5F1158B1CD0C081BA51C02C12DAD4C8F839CE2E44954B1DFE5A7C0137F0FA3FEB366B23A7B9EB4535AC403D0CDF26EB5973C647B26BEB85EBDCA65595AFFC1149A6D387</span><br><span class="line">........</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 拼接字符串</span><br><span class="line">add_key = GErfJus#Ofr%</span><br><span class="line"># 秘钥算法</span><br><span class="line">clientkeyDecrypt = md5(&#123;secinfo&#125;&#123;add_key&#125;) -&gt; substring(0, 16) -&gt; toUpperCase()</span><br><span class="line"># 解密算法</span><br><span class="line">result = AES() -&gt; decodeCerResponse(byte(response), byte(clientkeyDecrypt))</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>算法为AES加密解密(ECB模式) , 解密秘钥为以上<code>clientkeyDecrypt</code><br><code>clientkeyDecrypt</code> 为MD5后取前16位转大写 , ECB模式无填充解密即可  </p>
</blockquote>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">return</span>&gt;</span>0<span class="tag">&lt;/<span class="name">return</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">imspwd</span>&gt;</span>E7E673CD95AEF839206A15A62AFE60E5<span class="tag">&lt;/<span class="name">imspwd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sbc</span>&gt;</span><span class="tag">&lt;/<span class="name">sbc</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">domain</span>&gt;</span><span class="tag">&lt;/<span class="name">domain</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">svnlist</span>&gt;</span><span class="tag">&lt;/<span class="name">svnlist</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">svnuser</span>&gt;</span><span class="tag">&lt;/<span class="name">svnuser</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">svnpwd</span>&gt;</span><span class="tag">&lt;/<span class="name">svnpwd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">htslist</span>&gt;</span><span class="tag">&lt;/<span class="name">htslist</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">userType</span>&gt;</span>1<span class="tag">&lt;/<span class="name">userType</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">userid</span>&gt;</span>1711h52AR1yI<span class="tag">&lt;/<span class="name">userid</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">loginid</span>&gt;</span>160334480555369<span class="tag">&lt;/<span class="name">loginid</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">heartime</span>&gt;</span>4<span class="tag">&lt;/<span class="name">heartime</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">funcId</span>&gt;</span>1000000000000000<span class="tag">&lt;/<span class="name">funcId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">token</span>&gt;</span>gquJ43xQ|1|RCS|1605936805651|BnEaDQrCg8cUJ1Mp4GjV1.dmGoOVrB0meR52eij8PBOOtkY8x3c5MI92EP_rBWg4tuPUOLExb.wl724cetD5rUHz5BlW5OzaMK0Z6SiA52Kst0Nvt.sBnIi4bYK8x5etKwRZeTUya6ULgApq_vQgTdM9pCaqnaKiDV1vqBGXkaQ-<span class="tag">&lt;/<span class="name">token</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">expiretime</span>&gt;</span>2592000<span class="tag">&lt;/<span class="name">expiretime</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">authToken</span>&gt;</span>gquJ43xQ|1|RCS|1605936805651|BnEaDQrCg8cUJ1Mp4GjV1.dmGoOVrB0meR52eij8PBOOtkY8x3c5MI92EP_rBWg4tuPUOLExb.wl724cetD5rUHz5BlW5OzaMK0Z6SiA52Kst0Nvt.sBnIi4bYK8x5etKwRZeTUya6ULgApq_vQgTdM9pCaqnaKiDV1vqBGXkaQ-<span class="tag">&lt;/<span class="name">authToken</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">atExpiretime</span>&gt;</span>2592000<span class="tag">&lt;/<span class="name">atExpiretime</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">deviceid</span>&gt;</span>5617A97CE3EA4B7187F4A6D84CB02880<span class="tag">&lt;/<span class="name">deviceid</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">serverinfo</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mbhttpsurl</span>&gt;</span>https://ose1.caiyun.feixin.10086.cn:8542/isbo/openApi/<span class="tag">&lt;/<span class="name">mbhttpsurl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fburl</span>&gt;</span>http://mrp.weibo.10086.cn<span class="tag">&lt;/<span class="name">fburl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">editurl</span>&gt;</span>http://edit.caiyun.feixin.10086.cn<span class="tag">&lt;/<span class="name">editurl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mediaurl</span>&gt;</span>http://120.132.156.103:80<span class="tag">&lt;/<span class="name">mediaurl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">cmpassurl</span>&gt;</span>https://www.cmpassport.com<span class="tag">&lt;/<span class="name">cmpassurl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">cytxlurl</span>&gt;</span>https://auth.cytxl.com.cn<span class="tag">&lt;/<span class="name">cytxlurl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fxcaptchaurl</span>&gt;</span>http://nav.fetion.com.cn<span class="tag">&lt;/<span class="name">fxcaptchaurl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xmppaddr</span>&gt;</span>221.176.66.104:5225,221.176.66.104:5226,221.176.66.104:5227<span class="tag">&lt;/<span class="name">xmppaddr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">boshurl</span>&gt;</span>221.176.66.104:8081,221.176.66.104:8082,221.176.66.104:8083<span class="tag">&lt;/<span class="name">boshurl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">marketurl</span>&gt;</span>http://mcmm.caiyun.feixin.10086.cn:80<span class="tag">&lt;/<span class="name">marketurl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">invitecodeurl</span>&gt;</span>http://caiyun.feixin.10086.cn/i.jsp<span class="tag">&lt;/<span class="name">invitecodeurl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pingurl</span>&gt;</span>http://221.176.66.99:80<span class="tag">&lt;/<span class="name">pingurl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rifurl</span>&gt;</span>http://ose.caiyun.feixin.10086.cn:80/richlifeApp<span class="tag">&lt;/<span class="name">rifurl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">wapUrl</span>&gt;</span>http://caiyun.feixin.10086.cn:7070<span class="tag">&lt;/<span class="name">wapUrl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rifhttpsurl</span>&gt;</span>https://ose.caiyun.feixin.10086.cn:443/richlifeApp<span class="tag">&lt;/<span class="name">rifhttpsurl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">chargeUrl</span>&gt;</span>https://cmmedia.caiyun.feixin.10086.cn:443<span class="tag">&lt;/<span class="name">chargeUrl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">isboUrl</span>&gt;</span>https://ose1.caiyun.feixin.10086.cn:8542<span class="tag">&lt;/<span class="name">isboUrl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">calURL</span>&gt;</span>http://ose.caiyun.feixin.10086.cn/richlifeApp<span class="tag">&lt;/<span class="name">calURL</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">testTermConnectURL</span>&gt;</span>http://aas.caiyun.feixin.10086.cn/tellin/usr/puc/ispace/testTermConnect.do<span class="tag">&lt;/<span class="name">testTermConnectURL</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">serverinfo</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">account</span>&gt;</span>15802336010<span class="tag">&lt;/<span class="name">account</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">expiryDate</span>&gt;</span>-1<span class="tag">&lt;/<span class="name">expiryDate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">areaCode</span>&gt;</span>23<span class="tag">&lt;/<span class="name">areaCode</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">provCode</span>&gt;</span>23<span class="tag">&lt;/<span class="name">provCode</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">userExtInfo</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">passID</span>&gt;</span>844163976<span class="tag">&lt;/<span class="name">passID</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">AndID</span>&gt;</span>844163976<span class="tag">&lt;/<span class="name">AndID</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">isRegWeibo</span>&gt;</span>-1<span class="tag">&lt;/<span class="name">isRegWeibo</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">accessToken</span>&gt;</span>NTE1MUFCNjcxMTM2RjA1QTg3N0VBOUU4ODQzRjE3QkIyOEY2RjQ4Qzk5RUY4NUFDMEVBODMxOEQyRTk2NEU1ODo0NDYxMDE=<span class="tag">&lt;/<span class="name">accessToken</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">userExtInfo</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">srvInfoVer</span>&gt;</span>D071457A5A1AE65EADDB39E38EE3A2F8<span class="tag">&lt;/<span class="name">srvInfoVer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>注意解密后数据尾部有N个<code>\x0f</code> or <code>\x0b</code> or <code>\x0c</code> or <code>\x06</code><br>可能为其他不同的字符，最好写通用匹配方式去除  </p>
</blockquote>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><blockquote>
<p>仓库地址 <a class="link"   href="https://github.com/lkeme/Enc2Dec/tree/master/mCloud" >和彩云-内容加解密 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>代码逻辑比较简单，详情施工中…  </p>
</blockquote>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>该文章代码只为学习，麻烦未经允许禁止转载哦  </p>
<p>END.  </p>
]]></content>
      <categories>
        <category>Reverse</category>
      </categories>
      <tags>
        <tag>CaiYun</tag>
        <tag>10086</tag>
        <tag>feixin</tag>
        <tag>网盘</tag>
        <tag>逆向</tag>
      </tags>
  </entry>
  <entry>
    <title>如何给Python threading线程加个控制开关</title>
    <url>/2018/10/02/%E5%A6%82%E4%BD%95%E7%BB%99Python-threading%E7%BA%BF%E7%A8%8B%E5%8A%A0%E4%B8%AA%E6%8E%A7%E5%88%B6%E5%BC%80%E5%85%B3/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Python3.6.6&#x2F;threading&#x2F;threading.Event,如何给每个线程加一个控制开关。</p>
<h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><p>在爬虫项目中,<code>threading</code>模块的使用率还是很高的,<br>每个线程之间独立,如果一个线程成功完成了任务退出了，<br>其他的线程还要继续跑吗? 会造成资源浪费,如何给线程之间弄个信号源,<br>一个线程完成任务,其他线程及退出呢?当然可能有很多方法完成目的,<br>我只把自己使用过的方法做个记录。</p>
<h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><p><code>test.py</code></p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Calculation</span>(threading.Thread):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, signal</span>):</span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">        <span class="comment"># 开关控制</span></span><br><span class="line">        self.singal = signal</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        self.test()</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            num = random.randint(<span class="number">0</span>, <span class="number">100</span>)</span><br><span class="line">            <span class="built_in">print</span>(threading.currentThread(), num)</span><br><span class="line">            <span class="comment"># 如果其他线程完成任务打开开关,当前线程就退出</span></span><br><span class="line">            <span class="keyword">if</span> self.singal.isSet():</span><br><span class="line">                <span class="built_in">print</span>(threading.currentThread(), <span class="string">&#x27;其他线程已经完成任务,退出!&#x27;</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">                </span><br><span class="line">            <span class="comment"># 如果随机数符合了条件,就把开关打开</span></span><br><span class="line">            <span class="keyword">if</span> num == <span class="number">66</span>:</span><br><span class="line">                <span class="built_in">print</span>(threading.currentThread(), <span class="string">&#x27;当前线程完成任务,退出!&#x27;</span>)</span><br><span class="line">                self.singal.<span class="built_in">set</span>()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 初始“开关” ，默认值 False</span></span><br><span class="line">    event_obj = threading.Event()</span><br><span class="line">    <span class="comment"># 线程列表</span></span><br><span class="line">    threads_list = []</span><br><span class="line">    <span class="comment"># 开始线程 5个线程</span></span><br><span class="line">    <span class="keyword">for</span> thread <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">5</span>):</span><br><span class="line">        threads_list.append(Calculation(signal=event_obj))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> threads_list:</span><br><span class="line">        t.start()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># for t in threads:</span></span><br><span class="line">    <span class="comment">#     t.join()</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>看看输出结果,也没什么其他好说的</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 数据太长,删过一部分,重要的流程还在</span><br><span class="line"># \Pythonvenv\py3\Scripts\python.exe test.py</span><br><span class="line">&lt;Calculation(Thread-1, started 24500)&gt; 1</span><br><span class="line">&lt;Calculation(Thread-1, started 24500)&gt; 34</span><br><span class="line">&lt;Calculation(Thread-1, started 24500)&gt; 60</span><br><span class="line">&lt;Calculation(Thread-1, started 24500)&gt; 13</span><br><span class="line">&lt;Calculation(Thread-2, started 24400)&gt; 36</span><br><span class="line">&lt;Calculation(Thread-2, started 24400)&gt; 60</span><br><span class="line">&lt;Calculation(Thread-1, started 24500)&gt; 80</span><br><span class="line">&lt;Calculation(Thread-3, started 13304)&gt; 19</span><br><span class="line">&lt;Calculation(Thread-2, started 24400)&gt; 87</span><br><span class="line">&lt;Calculation(Thread-1, started 24500)&gt; 97</span><br><span class="line">&lt;Calculation(Thread-3, started 13304)&gt; 36</span><br><span class="line">&lt;Calculation(Thread-2, started 24400)&gt; 3</span><br><span class="line">&lt;Calculation(Thread-1, started 24500)&gt; 2</span><br><span class="line">&lt;Calculation(Thread-4, started 18092)&gt; 38</span><br><span class="line">&lt;Calculation(Thread-5, started 16736)&gt; 62</span><br><span class="line">&lt;Calculation(Thread-3, started 13304)&gt; 33</span><br><span class="line">&lt;Calculation(Thread-2, started 24400)&gt; 20</span><br><span class="line">&lt;Calculation(Thread-2, started 24400)&gt; 97</span><br><span class="line">&lt;Calculation(Thread-2, started 24400)&gt; 58</span><br><span class="line">&lt;Calculation(Thread-2, started 24400)&gt; 23</span><br><span class="line">&lt;Calculation(Thread-5, started 16736)&gt; 37</span><br><span class="line">&lt;Calculation(Thread-3, started 13304)&gt; 91</span><br><span class="line">&lt;Calculation(Thread-1, started 24500)&gt; 13</span><br><span class="line">&lt;Calculation(Thread-4, started 18092)&gt; 11</span><br><span class="line">&lt;Calculation(Thread-2, started 24400)&gt; 16</span><br><span class="line">&lt;Calculation(Thread-2, started 24400)&gt; 66</span><br><span class="line">&lt;Calculation(Thread-2, started 24400)&gt; 当前线程完成任务,退出!</span><br><span class="line">&lt;Calculation(Thread-3, started 13304)&gt; 64</span><br><span class="line">&lt;Calculation(Thread-1, started 24500)&gt; 19</span><br><span class="line">&lt;Calculation(Thread-4, started 18092)&gt; 92</span><br><span class="line">&lt;Calculation(Thread-5, started 16736)&gt; 24</span><br><span class="line">&lt;Calculation(Thread-3, started 13304)&gt; 其他线程已经完成任务,退出!</span><br><span class="line">&lt;Calculation(Thread-1, started 24500)&gt; 其他线程已经完成任务,退出!</span><br><span class="line">&lt;Calculation(Thread-4, started 18092)&gt; 其他线程已经完成任务,退出!</span><br><span class="line">&lt;Calculation(Thread-5, started 16736)&gt; 其他线程已经完成任务,退出!</span><br><span class="line"></span><br><span class="line">Process finished with exit code 0</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>


<h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义一个开关</span></span><br><span class="line">obj = threading.Event() </span><br><span class="line"></span><br><span class="line"><span class="comment"># 把开关传进每个线程</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看开关的状态,返回True或False,默认值 False</span></span><br><span class="line">obj.isSet()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开开关,此时值为True</span></span><br><span class="line">obj.<span class="built_in">set</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭开关,此时值为False</span></span><br><span class="line">obj.clear()</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>End.</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>threading</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓设备逆向分析字段指南</title>
    <url>/2022/01/21/%E5%AE%89%E5%8D%93%E8%AE%BE%E5%A4%87%E9%80%86%E5%90%91%E5%88%86%E6%9E%90%E5%AD%97%E6%AE%B5%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>安卓逆向分析中，一些必要清楚的字段。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><table>
<thead>
<tr>
<th>字段</th>
<th>描述</th>
<th>组成</th>
<th>重复性</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>Android ID</td>
<td>安卓设备出厂生成的唯一设备ID</td>
<td>16 位字符串</td>
<td>理论上有 36的16次方种组合，不易出现重复</td>
<td>ROOT、刷机、恢复出厂设置时会被重置</td>
</tr>
<tr>
<td>OAID</td>
<td>移动安全联盟推出的匿名设备标识符</td>
<td>32 位字符</td>
<td>不易出现重复</td>
<td>可手动重置、可恢复出厂设置重置 、Android 10以上可获取</td>
</tr>
<tr>
<td>IMEI</td>
<td>国际移动设备识别码</td>
<td>15 位数字</td>
<td>不易出现重复</td>
<td>恢复出厂设置不会重置、但可软件伪造、Android 10以上不支持获取</td>
</tr>
<tr>
<td>Mac</td>
<td>设备唯一网络标识、全球唯一识别码、各厂商区别划分</td>
<td>48 位二进制数</td>
<td>理论上有 2 ^ 48(281474976710656) 次方种组合，不易出现重复</td>
<td>恢复出厂设置不会重置、但可软件伪造</td>
</tr>
<tr>
<td>Serial</td>
<td>Android 序列号(硬件)</td>
<td>16 位字母字符串</td>
<td>不易出现重复</td>
<td>与硬件信息同步</td>
</tr>
<tr>
<td>DrmID(Media)</td>
<td>MediaDrm保护版权唯一ID</td>
<td>长度根据各类算法不定长</td>
<td>不易出现重复</td>
<td>恢复出厂设置大概率不会被重置</td>
</tr>
<tr>
<td>UUID</td>
<td>随机序列码</td>
<td>32位 16 进制字符</td>
<td>不易出现重复</td>
<td>随机性较强、不易校验</td>
</tr>
<tr>
<td>Band</td>
<td>基带相关信息</td>
<td>根据各个OS不定长</td>
<td>随硬件变化</td>
<td>无</td>
</tr>
<tr>
<td>Brand</td>
<td>硬件手机品牌</td>
<td>根据各个品牌不定长</td>
<td>随品牌变化</td>
<td>无</td>
</tr>
<tr>
<td>Model</td>
<td>品牌下的细分型号</td>
<td>根据各个品牌不定长</td>
<td>随品牌变化</td>
<td>无</td>
</tr>
<tr>
<td>Manufacture</td>
<td>制造厂商</td>
<td>根据各个品牌不定长</td>
<td>随品牌变化</td>
<td>无</td>
</tr>
<tr>
<td>Boot</td>
<td>上次开机到当前时间</td>
<td>Unix 时间戳(毫秒)</td>
<td>随用户使用时长变化</td>
<td>无</td>
</tr>
<tr>
<td>DeviceId</td>
<td>设备的唯一ID</td>
<td>不定长字符串</td>
<td>可能为IMEI、 MEID 或 ESN</td>
<td>随手机环境变化</td>
</tr>
<tr>
<td>Sim Serial</td>
<td>Sim 卡的序列号</td>
<td>无</td>
<td>无</td>
<td>装有 Sim 卡时可用</td>
</tr>
</tbody></table>
<p>END.</p>
]]></content>
      <categories>
        <category>Reverse</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Reverse</tag>
      </tags>
  </entry>
  <entry>
    <title>小米AX9000折腾记录</title>
    <url>/2022/11/23/%E5%B0%8F%E7%B1%B3AX9000%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>小米AX9000折腾记录, 官方固件版本为<code>AX9000 1.0.108.bin</code><br>不是全量文章，整合流程，挑出部分重点，防止重复踩坑。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="通过虚拟机开启AX9000的SSH"><a href="#通过虚拟机开启AX9000的SSH" class="headerlink" title="通过虚拟机开启AX9000的SSH"></a>通过虚拟机开启AX9000的SSH</h3><div class="highlight-container" data-rel="Lua"><figure class="iseeu highlight lua"><table><tr><td class="code"><pre><span class="line"># 比较重点的一个脚本 下面会用到</span><br><span class="line"># /usr/lib/lua/luci/controller/admin/xqsystem.lua</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>(<span class="string">&quot;luci.controller.admin.xqsystem&quot;</span>, <span class="built_in">package</span>.<span class="built_in">seeall</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line">    <span class="keyword">local</span> page   = node(<span class="string">&quot;api&quot;</span>)</span><br><span class="line">    page.target  = firstchild()</span><br><span class="line">    page.title   = (<span class="string">&quot;&quot;</span>)</span><br><span class="line">    page.order   = <span class="number">100</span></span><br><span class="line">    page.index = <span class="literal">true</span></span><br><span class="line">    page   = node(<span class="string">&quot;api&quot;</span>,<span class="string">&quot;xqsystem&quot;</span>)</span><br><span class="line">    page.target  = firstchild()</span><br><span class="line">    page.title   = (<span class="string">&quot;&quot;</span>)</span><br><span class="line">    page.order   = <span class="number">100</span></span><br><span class="line">    page.index = <span class="literal">true</span></span><br><span class="line">    entry(&#123;<span class="string">&quot;api&quot;</span>, <span class="string">&quot;xqsystem&quot;</span>, <span class="string">&quot;token&quot;</span>&#125;, call(<span class="string">&quot;getToken&quot;</span>), (<span class="string">&quot;&quot;</span>), <span class="number">103</span>, <span class="number">0x08</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> LuciHttp = <span class="built_in">require</span>(<span class="string">&quot;luci.http&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getToken</span><span class="params">()</span></span></span><br><span class="line">    <span class="keyword">local</span> result = &#123;&#125;</span><br><span class="line">    result[<span class="string">&quot;code&quot;</span>] = <span class="number">0</span></span><br><span class="line">    result[<span class="string">&quot;token&quot;</span>] = <span class="string">&quot;; nvram set ssh_en=1; nvram set uart_en=1; nvram set boot_wait=on; nvram commit; uci set wireless.@wifi-iface[0].key=\`mkxqimage -I\`; uci commit; sed -i &#x27;s/channel=.*/channel=\&quot;debug\&quot;/g&#x27; /etc/init.d/dropbear; /etc/init.d/dropbear start;&quot;</span></span><br><span class="line">    LuciHttp.write_json(result)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>重点是将OPENWRT路由器ip设置为169.254.31.1, 然后关闭DHCP。不然会出现各式报错。</p>
</blockquote>
<ol>
<li><a class="link"   href="https://www.right.com.cn/forum/thread-4389756-1-1.html" >AX9000和AX6000获取SSH的方法 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ol>
<blockquote>
<p>重点是热点改成OpenWrt，密码12345678。以及热点网络适配器去掉ipv4的勾选项目。</p>
</blockquote>
<ol start="2">
<li><a class="link"   href="https://www.right.com.cn/forum/thread-5328443-1-1.html" >0成本用Win10热点和openwrt的vm虚拟机开启AX6000和AX9000的ssh <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ol>
<blockquote>
<p>重点是 <code>wireless-ax9000.sh</code>,也可以手动写入最上面的代码块。</p>
</blockquote>
<ol start="3">
<li><a class="link"   href="https://qust.me/post/ax9000_shellclash/" >小米 AX9000 解锁 SSH 安装 ShellClash 教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ol>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line"># 注意URL的参数，按实际情况替换。</span><br><span class="line"># 05f18fc74244d28dea39a5b537765e92要替换成自己的</span><br><span class="line"># 如果ssid不是OpenWrt 或者密码不为12345678 也需要替换</span><br><span class="line">测试:  http://192.168.1.1/cgi-bin/luci/api/xqsystem/token</span><br><span class="line">测试:  http://192.168.31.1/cgi-bin/luci/;stok=05f18fc74244d28dea39a5b537765e92/api/xqsystem/token</span><br><span class="line">http://192.168.31.1/cgi-bin/luci/;stok=05f18fc74244d28dea39a5b537765e92/api/xqsystem/extendwifi_connect_inited_router?ssid=OpenWrt&amp;password=12345678&amp;encryption=WPA2PSKenctype=CCMP&amp;channel=11&amp;band=2g&amp;admin_username=root&amp;admin_password=admin&amp;admin_nonce=xxx</span><br></pre></td></tr></table></figure></div>

<ul>
<li>虚拟机搭建OpenWrt</li>
<li>将OPENWRT路由器ip设置为169.254.31.1</li>
<li>关闭OpenWrt的DHCP</li>
<li>使用wireless-ax9000.sh 或者 手动写入代码块 <code>xqsystem.lua</code></li>
<li>成功后再次打开路由器后台查看 5G 频段 Wi-Fi 密码，这个 Wi-Fi 密码就是我们默认的 ssh 密码，</li>
</ul>
<blockquote>
<p>以上最好是都在2.4G频段进行。几个教程需要搭配使用，看重点，可以多阅读几遍。</p>
</blockquote>
<h3 id="永久获取SSH权限-固化SSH"><a href="#永久获取SSH权限-固化SSH" class="headerlink" title="永久获取SSH权限(固化SSH)"></a>永久获取SSH权限(固化SSH)</h3><blockquote>
<p>请注意有变砖风险，可以跳过这部分。</p>
</blockquote>
<p><a class="link"   href="https://github.com/paldier/ax3600_tool" >项目地址 paldier&#x2F;ax3600_tool <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提前备份(最好下载保存)</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nanddump -f /tmp/bdata_mtd9.img /dev/mtd9</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将项目文件传到/tmp目录 给权限</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">chmod</span> +x /tmp/mitool*</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解锁分区锁</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">/tmp/mitool.sh unlock</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">自动重启并重新锁定分区锁</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">/tmp/mitool.sh hack</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示密码</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">/tmp/mitool.sh password</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示SN</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">/tmp/mitool.sh sn</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如升级后ssh被禁用可以用telnet登录</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sed -i <span class="string">&#x27;s/channel=.*/channel=&quot;debug&quot;/g&#x27;</span> /etc/init.d/dropbear</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">/etc/init.d/dropbear start</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">至此基本可以保证机器长期拥有root权限</span></span><br></pre></td></tr></table></figure></div>

<p>参考教程:<br><a class="link"   href="https://www.right.com.cn/forum/thread-4046020-1-1.html" >小米ax3600&#x2F;ax6000&#x2F;ax9000&#x2F;ax5&#x2F;ax6获取root权限 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a class="link"   href="https://www.right.com.cn/forum/thread-5695827-1-1.html" >ax9000永久获取ssh权限 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="刷QSDK-OpenWrt的方法"><a href="#刷QSDK-OpenWrt的方法" class="headerlink" title="刷QSDK&amp;&amp;OpenWrt的方法"></a>刷QSDK&amp;&amp;OpenWrt的方法</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1.这一部是设置<span class="built_in">env</span>保证小米固件在分区rootfs里，为下一部把qsdk刷到rootfs_1做准备</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvram <span class="built_in">set</span> flag_last_success=0</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvram <span class="built_in">set</span> flag_boot_rootfs=0</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvram <span class="built_in">set</span> flag_try_sys1_failed=0</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvram <span class="built_in">set</span> flag_try_sys2_failed=0</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvram commit</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">reboot</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2.小米原版固件下ssh命令写入qsdk固件，把固件上传到/tmp目录</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">. /lib/upgrade/platform.sh</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">switch_layout linux</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ubiformat /dev/mtd22 -y -f /tmp/openwrt-ipq807x-generic-xiaomi_ax9000-squashfs-nand-factory.bin</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvram <span class="built_in">set</span> flag_last_success=1</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvram <span class="built_in">set</span> flag_boot_rootfs=1</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvram commit</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">reboot</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这里刷固件就结束了，以下是切换分区。</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3.QSDK固件下恢复到原版固件</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">fw_setenv  flag_last_success 0</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">fw_setenv flag_boot_rootfs 0</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">reboot</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">4.原版固件恢复到QSDK固件</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvram <span class="built_in">set</span> flag_last_success=1</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvram <span class="built_in">set</span> flag_boot_rootfs=1</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvram commit</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">reboot</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>这里刷完是两个分区，可以官方固件和openwrt来回切换。<br>注意如果要重新刷，需要先执行3到原版固件，再执行2写入固件。</p>
</blockquote>
<p>参考教程:</p>
<ol>
<li><a class="link"   href="https://www.right.com.cn/forum/thread-5657691-1-1.html" >小米ax9000刷qsdk,openwrt的方法 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.right.com.cn/forum/thread-4111331-1-1.html" >小米红米路由器AX6刷第三方openwrt固件 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ol>
<h3 id="第三方固件地址"><a href="#第三方固件地址" class="headerlink" title="第三方固件地址"></a>第三方固件地址</h3><ol>
<li><a class="link"   href="https://www.right.com.cn/forum/thread-4875974-1-1.html" >【Openwrt开发版每周五更新】新版AX6&#x2F;AX3600&#x2F;AX9000(QSDK),NSS,组网,jd,多播,小猫咪 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/jingleijack/Openwrt_Beta/releases" >开发版 jingleijack&#x2F;Openwrt_Beta <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.right.com.cn/forum/thread-4743640-1-1.html" >小米 AX9000 OpenWrt R21.7.1.10 最新源码、V兔出国海淘海淘、clash、打倒美帝、JD. <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ol>
<h3 id="AdGuardHome"><a href="#AdGuardHome" class="headerlink" title="AdGuardHome"></a>AdGuardHome</h3><ol>
<li><a class="link"   href="https://www.right.com.cn/forum/thread-4090928-1-1.html" >AdGuardHome去广告和DNS正确姿势 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.right.com.cn/forum/thread-4055807-1-1.html" >AdGuard Home设置指南 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.right.com.cn/forum/thread-4084366-1-1.html" >openwrt插件 AdGuardHome学习与分享 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.right.com.cn/forum/thread-4486232-1-1.html" >AdGuard Home正确使用姿势&#x2F;去广告&#x2F;防污&#x2F;加速解析 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ol>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">1. AdGuardHome管理面板账号密码 root-admin 或者root-password</span><br><span class="line">2. </span><br></pre></td></tr></table></figure></div>

<h3 id="挂载U盘到-overlay"><a href="#挂载U盘到-overlay" class="headerlink" title="挂载U盘到&#x2F;overlay"></a>挂载U盘到&#x2F;overlay</h3><p>AX9000默认的分区大小不足以正常使用软件，所以需要挂载U盘扩容空间<br>请注意要提前把U盘格式化成ext4</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检测U盘是否插入</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> /proc/scsi/usb-storage/0</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">写入以下代码块</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim /etc/init.d/miwifi_overlay</span> </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这里使用AX6的一段代码来挂载overlay</span>  </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh /etc/rc.common</span></span><br><span class="line">START=00</span><br><span class="line"></span><br><span class="line">. /lib/functions/preinit.sh</span><br><span class="line"></span><br><span class="line">start() &#123;</span><br><span class="line">        [ -e /data/overlay ] || mkdir /data/overlay</span><br><span class="line">        [ -e /data/overlay/upper ] || mkdir /data/overlay/upper</span><br><span class="line">        [ -e /data/overlay/work ] || mkdir /data/overlay/work</span><br><span class="line"></span><br><span class="line">        mount --bind /data/overlay /overlay</span><br><span class="line">        fopivot /overlay/upper /overlay/work /rom 1</span><br><span class="line"></span><br><span class="line">        #Fixup miwifi misc, and DO NOT use /overlay/upper/etc instead, /etc/uci-defaults/* may be already removed</span><br><span class="line">        /bin/mount -o noatime,move /rom/data /data 2&gt;&amp;-</span><br><span class="line">        /bin/mount -o noatime,move /rom/etc /etc 2&gt;&amp;-</span><br><span class="line">        /bin/mount -o noatime,move /rom/ini /ini 2&gt;&amp;-</span><br><span class="line">        /bin/mount -o noatime,move /rom/userdisk /userdisk 2&gt;&amp;-</span><br><span class="line"></span><br><span class="line">        return 0</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">给权限</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">chmod</span> 755 /etc/init.d/miwifi_overlay</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">/etc/init.d/miwifi_overlay <span class="built_in">enable</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sync</span></span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">reboot</span></span><br></pre></td></tr></table></figure></div>

<p>重启后浏览器登录luci界面，点击系统-&gt;挂载点。在挂载点的下方点击修改按钮。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://img-blog.csdnimg.cn/20200713084745103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDUwNDEz,size_16,color_FFFFFF,t_70"
                     
                ></p>
<p>挂载点选择作为外部overlay使用(&#x2F;overlay)(不要选择其他选项)，点击保存，再点击保存&amp;应用。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://img-blog.csdnimg.cn/20200713084801302.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDUwNDEz,size_16,color_FFFFFF,t_70"
                     
                ></p>
<p>在命令行输入reboot执行路由器重启。重启后路由器可能会恢复出厂设置。 重启后打开系统-&gt;软件包，可以看见空闲空间已经变大。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://img-blog.csdnimg.cn/20200713084846122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDUwNDEz,size_16,color_FFFFFF,t_70"
                     
                ></p>
<p>挂载完成，这里参考了<br><a class="link"   href="https://blog.csdn.net/qq_43450413/article/details/107145575" >OpenWrt挂载U盘 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a class="link"   href="https://www.vediotalk.com/archives/13889" >OPENWRT | ESXI 下 OpenWrt扩容Overlay,增加安装插件空间 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="解决OpenWRT安装第三方包错误"><a href="#解决OpenWRT安装第三方包错误" class="headerlink" title="解决OpenWRT安装第三方包错误"></a>解决OpenWRT安装第三方包错误</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">root@OpenWrt:~# opkg print-architecture</span><br><span class="line">arch all 1</span><br><span class="line">arch noarch 1</span><br><span class="line">arch aarch64_cortex-a53_neon-vfpv4 10</span><br></pre></td></tr></table></figure></div>

<p>把返回的回显复制到opkg的设置里<br>倒数第二行加一行，修改后如下</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">root@OpenWrt:~# opkg print-architecture</span><br><span class="line">arch all 1</span><br><span class="line">arch noarch 1</span><br><span class="line">arch aarch64_cortex-a53 8</span><br><span class="line">arch aarch64_cortex-a53_neon-vfpv4 10</span><br></pre></td></tr></table></figure></div>

<p>但是因为<code>ipq807x</code>并没有适配，所以一些包最好是手动下载安装，手动安装依赖。</p>
<h3 id="换国内源"><a href="#换国内源" class="headerlink" title="换国内源"></a>换国内源</h3><div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line"># 注意 19.07-SNAPSHOT</span><br><span class="line">https://mirrors.tuna.tsinghua.edu.cn/openwrt/releases/19.07-SNAPSHOT/packages/</span><br><span class="line"># 注意 ipq807x</span><br><span class="line">https://mirrors.tuna.tsinghua.edu.cn/openwrt/releases/19.07-SNAPSHOT/targets/ipq807x/</span><br><span class="line"># 注意 aarch64_cortex-a53</span><br><span class="line">https://mirrors.tuna.tsinghua.edu.cn/openwrt/releases/19.07-SNAPSHOT/packages/aarch64_cortex-a53/</span><br></pre></td></tr></table></figure></div>

<h3 id="额外的插件"><a href="#额外的插件" class="headerlink" title="额外的插件"></a>额外的插件</h3><ol>
<li><a class="link"   href="https://github.com/maxlicheng/luci-app-unblockmusic" >解锁网易云灰色歌曲 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/UnblockNeteaseMusic/server" >UnblockNeteaseMusic <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/coolsnowwolf/lede/tree/master/package/lean/luci-app-unblockmusic" >luci-app-unblockmusic（二次修改） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/UnblockNeteaseMusic/luci-app-unblockneteasemusic" >UnblockNeteaseMusic(在用) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/sirpdboy/sirpdboy-package" >sirpdboy-package <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ol>
<h3 id="安装额外软件"><a href="#安装额外软件" class="headerlink" title="安装额外软件"></a>安装额外软件</h3><ul>
<li>Python3</li>
</ul>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">软件包界面手动安装或者命令</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Python</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">opkg install python3</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">opkg install python3-pip</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gcc</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">opkg install gcc automake autoconf libtool make</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>Nodejs</li>
</ul>
<h3 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或者写入/etc/profile</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">alias</span> pq3=<span class="string">&#x27;pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple $1&#x27;</span></span></span><br></pre></td></tr></table></figure></div>

<h3 id="额外命令"><a href="#额外命令" class="headerlink" title="额外命令"></a>额外命令</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装用户相关</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">opkg install shadow-groupadd shadow-groupdel shadow-useradd shadow-userdel shadow-usermod</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加普通用户并且设置密码</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&quot;testuser:*:1000:65534:testuser:/tmp:/bin/ash&quot;</span> &gt;&gt; /etc/passwd</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">passwd testuser</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除用户</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">userdel -r testuser</span></span><br></pre></td></tr></table></figure></div>

<h3 id="安装libcap"><a href="#安装libcap" class="headerlink" title="安装libcap*"></a>安装libcap*</h3><p>安装<code>libcap  libcap-bin</code>, 因为新版本变成了<code>libcap-ng  libcap-ng-bin</code></p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">手动</span></span><br><span class="line">https://downloads.openwrt.org/snapshots/packages/aarch64_cortex-a53/base/libcap_2.51-1_aarch64_cortex-a53.ipk</span><br><span class="line">https://downloads.openwrt.org/snapshots/packages/aarch64_cortex-a53/base/libcap-bin_2.51-1_aarch64_cortex-a53.ipk</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改下快照源，替换自己架构</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">src/gz snapshots https://downloads.openwrt.org/snapshots/packages/&#123;architecture&#125;/base</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash">$ opkg update</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">opkg install libcap libcap-bin --force-depends</span></span><br></pre></td></tr></table></figure></div>

<h3 id="AX9000-开发版-1-0-140-挂载-overlay"><a href="#AX9000-开发版-1-0-140-挂载-overlay" class="headerlink" title="AX9000(开发版)1.0.140 挂载&#x2F;overlay"></a>AX9000(开发版)1.0.140 挂载&#x2F;overlay</h3><p>给U盘分区，ext4格式。分两个或者多个以上，第一个分区要大，给Docker用的 ,第二个分区给&#x2F;overlay。</p>
<blockquote>
<p>注意要关闭docker</p>
</blockquote>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看挂载的U盘分区</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">df</span> -h</span></span><br><span class="line"></span><br><span class="line">/dev/sda1                55.0G      4.7G     47.5G   9% /extdisks/sda1</span><br><span class="line">/dev/sda1                55.0G      4.7G     47.5G   9% /mnt/docker_disk</span><br><span class="line">/dev/sda2                 2.5G     43.6M      2.3G   2% /extdisks/sda2</span><br><span class="line">/dev/sda1                55.0G      4.7G     47.5G   9% /mnt/docker_disk/mi_docker/lib/docker</span><br></pre></td></tr></table></figure></div>

<p>把分区好挂载到mount &#x2F;sda3</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果报错不存在文件夹  可能需要手动创建/mnt/sda2</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mount /dev/sda2 /mnt/sda2</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果上面报错 使用这个</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mount -o rw /dev/sda2 /mnt/sda2</span></span><br></pre></td></tr></table></figure></div>

<p>挂载检测是否完成</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ls</span> /mnt/sda2</span></span><br></pre></td></tr></table></figure></div>

<p>迁移Overly</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> /overlay</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> -r /overlay/* /mnt/sda2</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ls</span> /mnt/sda2</span></span><br></pre></td></tr></table></figure></div>

<p>设置开机自动挂载</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/etc/rc.local</span></span><br><span class="line"></span><br><span class="line">echo 1 &gt; /sys/fs/cgroup/memory/memory.use_hierarchy</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">添加以下这句挂载命令</span></span><br><span class="line">mount /dev/sda2 /overlay </span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure></div>

<h3 id="AX9000-开发版-1-0-140-Docker创建macvlan-这个版本暂时不支持"><a href="#AX9000-开发版-1-0-140-Docker创建macvlan-这个版本暂时不支持" class="headerlink" title="AX9000(开发版)1.0.140 Docker创建macvlan(这个版本暂时不支持)"></a>AX9000(开发版)1.0.140 Docker创建macvlan(这个版本暂时不支持)</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">开启网卡混杂模式</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip <span class="built_in">link</span> <span class="built_in">set</span> br-lan promisc on</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker network create -d macvlan \</span></span><br><span class="line"><span class="language-bash">    --subnet=192.168.31.0/24 --gateway=192.168.31.1 \</span></span><br><span class="line"><span class="language-bash">    -o parent=br-lan \</span></span><br><span class="line"><span class="language-bash">    -o macvlan_mode=bridge \</span></span><br><span class="line"><span class="language-bash">    macnet</span></span><br></pre></td></tr></table></figure></div>

<h3 id="AX9000-开发版-1-0-140-Docker安装使用AdGuard-Home"><a href="#AX9000-开发版-1-0-140-Docker安装使用AdGuard-Home" class="headerlink" title="AX9000(开发版)1.0.140 Docker安装使用AdGuard Home"></a>AX9000(开发版)1.0.140 Docker安装使用AdGuard Home</h3><p><a class="link"   href="https://web.vip.miui.com/page/info/mio/mio/detail?postId=32988534&app_version=dev.20051" >AX9000 Docker介绍 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<blockquote>
<p>以下大部分bash命令需要在ssh里操作</p>
</blockquote>
<h4 id="Docker国内镜像源"><a href="#Docker国内镜像源" class="headerlink" title="Docker国内镜像源"></a>Docker国内镜像源</h4><table>
<thead>
<tr>
<th>名称</th>
<th>路径</th>
</tr>
</thead>
<tbody><tr>
<td>网易</td>
<td><a class="link"   href="http://hub-mirror.c.163.com/" >http://hub-mirror.c.163.com <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td>中国官方镜像</td>
<td><a class="link"   href="https://registry.docker-cn.com/" >https://registry.docker-cn.com <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td>中国科技大学</td>
<td><a class="link"   href="https://docker.mirrors.ustc.edu.cn/" >https://docker.mirrors.ustc.edu.cn <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
<tr>
<td>阿里云镜像</td>
<td>https:&#x2F;&#x2F;[xxx].mirror.aliyuncs.com</td>
</tr>
</tbody></table>
<h4 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h4><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Portainer UI界面 搜索并拉取</span></span><br><span class="line">adguard/adguardhome</span><br><span class="line"></span><br><span class="line"><span class="comment"># 命令行</span></span><br><span class="line">$ docker pull adguard/adguardhome</span><br></pre></td></tr></table></figure></div>

<h4 id="部署镜像"><a href="#部署镜像" class="headerlink" title="部署镜像"></a>部署镜像</h4><ol>
<li>Name, 随意</li>
<li>Image, adguard&#x2F;adguardhome</li>
<li>Always pull the image, 可以关掉</li>
<li>Volumes, 设置挂载目录持久化(可选) e.g &#x2F;root&#x2F;workspace&#x2F;adguard&#x2F;workdir:&#x2F;opt&#x2F;adguardhome&#x2F;work &#x2F;root&#x2F;workspace&#x2F;adguard&#x2F;confdir:<br>&#x2F;opt&#x2F;adguardhome&#x2F;conf</li>
<li>Publish all exposed network ports to random host ports, (随机暴露端口)打开</li>
<li>Manual network port publishing, 手动添加 5553:53 tcp|5553:53 udp|3000:3000 tcp</li>
<li>Network, bridge</li>
<li>Restart policy, Always</li>
</ol>
<p>等待部署完成, 设置地址访问192.168.31.1:3000, 根据需求设置(可百度设置教程)。</p>
<h4 id="汉化Portainer"><a href="#汉化Portainer" class="headerlink" title="汉化Portainer"></a>汉化Portainer</h4><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /tmp</span><br><span class="line">$ curl -sL https://ghproxy.com/https://github.com/eysp/public/archive/public.tar.gz | tar xz</span><br><span class="line">$ <span class="built_in">rm</span> -rf public</span><br><span class="line">$ <span class="built_in">mv</span> public-public public</span><br><span class="line">$ docker stop portainer</span><br><span class="line">$ docker <span class="built_in">cp</span> public portainer:/</span><br><span class="line">$ docker start portainer</span><br></pre></td></tr></table></figure></div>

<p>刷新页面即可</p>
<h4 id="Dnsmasq转发到AdgHome"><a href="#Dnsmasq转发到AdgHome" class="headerlink" title="Dnsmasq转发到AdgHome"></a>Dnsmasq转发到AdgHome</h4><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/dnsmasq.conf 最后添加</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># port=53</span></span><br><span class="line">server=127.0.0.1<span class="comment">#5553                  </span></span><br><span class="line">server=192.168.31.1<span class="comment">#5553</span></span><br><span class="line">no-resolv        </span><br><span class="line">dns-forward-max=100000 </span><br></pre></td></tr></table></figure></div>

<p>重启后即可使用AdgHome，注意这里使用的是转发，所以Adg里的客户端显示的都是本地地址。<br>不要尝试使用Adg的53端口来替换dnsmasq的53，会有大问题。<br>也不要尝试再DCHP里设置DNS，会有大问题。</p>
<h4 id="备份AdGuardHome-yaml"><a href="#备份AdGuardHome-yaml" class="headerlink" title="备份AdGuardHome.yaml"></a>备份AdGuardHome.yaml</h4><p>仅供参考</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">bind_host:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="attr">bind_port:</span> <span class="number">3000</span></span><br><span class="line"><span class="attr">beta_bind_port:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">users:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">$2y$10$FfeQavihMUiXCuJhHuQwy.6EOXDvkXb/S50qI5fXizqarNT/ShhQm</span></span><br><span class="line"><span class="attr">auth_attempts:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">block_auth_min:</span> <span class="number">15</span></span><br><span class="line"><span class="attr">http_proxy:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">rlimit_nofile:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">debug_pprof:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">web_session_ttl:</span> <span class="number">720</span></span><br><span class="line"><span class="attr">dns:</span></span><br><span class="line">  <span class="attr">bind_hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">5553</span></span><br><span class="line">  <span class="attr">statistics_interval:</span> <span class="number">7</span></span><br><span class="line">  <span class="attr">querylog_enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">querylog_file_enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">querylog_interval:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">querylog_size_memory:</span> <span class="number">1000</span></span><br><span class="line">  <span class="attr">anonymize_client_ip:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">protection_enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">blocking_mode:</span> <span class="string">nxdomain</span></span><br><span class="line">  <span class="attr">blocking_ipv4:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">blocking_ipv6:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">blocked_response_ttl:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">parental_block_host:</span> <span class="string">family-block.dns.adguard.com</span></span><br><span class="line">  <span class="attr">safebrowsing_block_host:</span> <span class="string">standard-block.dns.adguard.com</span></span><br><span class="line">  <span class="attr">ratelimit:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">ratelimit_whitelist:</span> [ ]</span><br><span class="line">  <span class="attr">refuse_any:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">upstream_dns:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">221.7</span><span class="number">.92</span><span class="number">.98</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">221.5</span><span class="number">.203</span><span class="number">.98</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">114.114</span><span class="number">.114</span><span class="number">.114</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">223.5</span><span class="number">.5</span><span class="number">.5</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">114.114</span><span class="number">.115</span><span class="number">.115</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">119.29</span><span class="number">.29</span><span class="number">.29</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">1.1</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">2408</span><span class="string">:8663::2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">2408</span><span class="string">:8662::2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://dns.alidns.com/dns-query</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://doh.pub/dns-query</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://doh.360.cn/dns-query</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://doh.pub/dns-query</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://dns.google/dns-query</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://dns.adguard.com/dns-query</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://dns.quad9.net/dns-query</span></span><br><span class="line">  <span class="attr">upstream_dns_file:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">bootstrap_dns:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">221.7</span><span class="number">.92</span><span class="number">.98</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">221.5</span><span class="number">.203</span><span class="number">.98</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">2408</span><span class="string">:8663::2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">2408</span><span class="string">:8662::2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">114.114</span><span class="number">.114</span><span class="number">.114</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">223.5</span><span class="number">.5</span><span class="number">.5</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">119.29</span><span class="number">.29</span><span class="number">.29</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">1.1</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span></span><br><span class="line">  <span class="attr">all_servers:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">fastest_addr:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">allowed_clients:</span> [ ]</span><br><span class="line">  <span class="attr">disallowed_clients:</span> [ ]</span><br><span class="line">  <span class="attr">blocked_hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">version.bind</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">id.server</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">hostname.bind</span></span><br><span class="line">  <span class="attr">cache_size:</span> <span class="number">4194304</span></span><br><span class="line">  <span class="attr">cache_ttl_min:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">cache_ttl_max:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">bogus_nxdomain:</span> [ ]</span><br><span class="line">  <span class="attr">aaaa_disabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">enable_dnssec:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">edns_client_subnet:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">max_goroutines:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">ipset:</span> [ ]</span><br><span class="line">  <span class="attr">filtering_enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">filters_update_interval:</span> <span class="number">24</span></span><br><span class="line">  <span class="attr">parental_enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">safesearch_enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">safebrowsing_enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">safebrowsing_cache_size:</span> <span class="number">1048576</span></span><br><span class="line">  <span class="attr">safesearch_cache_size:</span> <span class="number">1048576</span></span><br><span class="line">  <span class="attr">parental_cache_size:</span> <span class="number">1048576</span></span><br><span class="line">  <span class="attr">cache_time:</span> <span class="number">30</span></span><br><span class="line">  <span class="attr">rewrites:</span> [ ]</span><br><span class="line">  <span class="attr">blocked_services:</span> [ ]</span><br><span class="line">  <span class="attr">local_domain_name:</span> <span class="string">lan</span></span><br><span class="line">  <span class="attr">resolve_clients:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">local_ptr_upstreams:</span> [ ]</span><br><span class="line"><span class="attr">tls:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">server_name:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">force_https:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">port_https:</span> <span class="number">443</span></span><br><span class="line">  <span class="attr">port_dns_over_tls:</span> <span class="number">853</span></span><br><span class="line">  <span class="attr">port_dns_over_quic:</span> <span class="number">784</span></span><br><span class="line">  <span class="attr">port_dnscrypt:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">dnscrypt_config_file:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">allow_unencrypted_doh:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">strict_sni_check:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">certificate_chain:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">private_key:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">certificate_path:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">private_key_path:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">filters:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://adguardteam.github.io/AdGuardSDNSFilter/Filters/filter.txt</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">AdGuard</span> <span class="string">Simplified</span> <span class="string">Domain</span> <span class="string">Names</span> <span class="string">filter</span></span><br><span class="line">    <span class="attr">id:</span> <span class="number">1</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://adaway.org/hosts.txt</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">AdAway</span></span><br><span class="line">    <span class="attr">id:</span> <span class="number">2</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://hosts-file.net/ad_servers.txt</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">hpHosts</span> <span class="bullet">-</span> <span class="string">Ad</span> <span class="string">and</span> <span class="string">Tracking</span> <span class="string">servers</span> <span class="string">only</span></span><br><span class="line">    <span class="attr">id:</span> <span class="number">3</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://www.malwaredomainlist.com/hostslist/hosts.txt</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">MalwareDomainList.com</span> <span class="string">Hosts</span> <span class="string">List</span></span><br><span class="line">    <span class="attr">id:</span> <span class="number">4</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/vokins/yhosts/master/data/tvbox.txt</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">tvbox</span></span><br><span class="line">    <span class="attr">id:</span> <span class="number">1575018007</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://cdn.jsdelivr.net/gh/neoFelhz/neohosts@gh-pages/full/hosts.txt</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">neoHosts</span> <span class="string">full</span></span><br><span class="line">    <span class="attr">id:</span> <span class="number">1575618240</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://hosts.nfz.moe/basic/hosts</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">neoHosts</span> <span class="string">basic</span></span><br><span class="line">    <span class="attr">id:</span> <span class="number">1575618241</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">http://sbc.io/hosts/hosts</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">StevenBlack</span> <span class="string">host</span> <span class="string">basic</span></span><br><span class="line">    <span class="attr">id:</span> <span class="number">1575618242</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">http://sbc.io/hosts/alternates/fakenews-gambling-porn-social/hosts</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">StevenBlack</span> <span class="string">host+fakenews</span> <span class="string">+</span> <span class="string">gambling</span> <span class="string">+</span> <span class="string">porn</span> <span class="string">+</span> <span class="string">social</span></span><br><span class="line">    <span class="attr">id:</span> <span class="number">1575618243</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://anti-ad.net/easylist.txt</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">anti-AD</span> <span class="string">命中率高、兼容性强</span></span><br><span class="line">    <span class="attr">id:</span> <span class="number">1632419612</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://gitee.com/halflife/list/raw/master/ad.txt</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">halflife合并乘风</span></span><br><span class="line">    <span class="attr">id:</span> <span class="number">1632419613</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://banbendalao.coding.net/p/adgk/d/ADgk/git/raw/master/ADgk.txt</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">adgk手机去广告规则</span></span><br><span class="line">    <span class="attr">id:</span> <span class="number">1632419619</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://cdn.jsdelivr.net/gh/zsakvo/AdGuard-Custom-Rule@master/rule/zhihu.txt</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Zhihu</span> <span class="string">App</span> <span class="string">广告屏蔽</span></span><br><span class="line">    <span class="attr">id:</span> <span class="number">1632824652</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://www.i-dont-care-about-cookies.eu/abp</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">I</span> <span class="string">don&#x27;t</span> <span class="string">care</span> <span class="string">about</span> <span class="string">cookies</span></span><br><span class="line">    <span class="attr">id:</span> <span class="number">1636012831</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://cdn.jsdelivr.net/gh/Goooler/1024_hosts@master/hosts</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">1024_hosts</span></span><br><span class="line">    <span class="attr">id:</span> <span class="number">1636012832</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://cdn.jsdelivr.net/gh/jdlingyu/ad-wars@master/hosts</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">大圣净化</span></span><br><span class="line">    <span class="attr">id:</span> <span class="number">1636012833</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://cdn.jsdelivr.net/gh/cjx82630/cjxlist@master/cjx-annoyance.txt</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">CJX&#x27;s</span> <span class="string">Annoyance</span> <span class="string">List</span></span><br><span class="line">    <span class="attr">id:</span> <span class="number">1636012834</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://cdn.jsdelivr.net/gh/Moexin/AdGuardHome/AdGuardHome.list</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">AdGuardHome.list</span></span><br><span class="line">    <span class="attr">id:</span> <span class="number">1636012836</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://cdn.jsdelivr.net/gh/Moexin/AdGuardHome/Neo-Dev-Host.list</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Neo-Dev-Host.list</span></span><br><span class="line">    <span class="attr">id:</span> <span class="number">1636012837</span></span><br><span class="line"><span class="attr">whitelist_filters:</span> [ ]</span><br><span class="line"><span class="attr">user_rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||active.tc.skysrt.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||ad.3.cn^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||admaster.com.cn^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||alog.umeng.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||amdcopen.m.taobao.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||api.app.skysrt.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||api.device.skysrt.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||api.hoisin.hw.coocaatv.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||api.home.skysrt.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||api.skyworthiot.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||api.upgrade.skysrt.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||api-app.coocaa.ottcn.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||api-home.coocaa.ottcn.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||api-home.skysrt.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||api-upgrade.coocaa.ottcn.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||app.snm0516.aisee.tv^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||btrace.play.t002.ottcn.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||business.video.tc.skysrt.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||cl-dl.cc0808.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||clog.skysrt.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||conf-darwin.xycdn.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||connect.play.aiseet.atianqi.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||data-dl.skysrt.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||data-hoisin.coocaa.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||dl.skysrt.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||dp3.play.t002.ottcn.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||gs.getui.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||hoisin.coocaa.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||hoisin.coocaatv.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||irs01.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||kaola.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||livep.l.t002.ottcn.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||log.skysrt.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||mdp-at.geely.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||member.coocaa.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||miaozhen.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||mtrace.play.t002.ottcn.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||ocsp.int-x3.letsencrypt.org^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||p.tencentmind.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||play.t002.ottcn.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||push.tc.skysrt.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||push.tvos.skysrt.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||puui.qpic.cn^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||qr.coocaa.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||res.hoisin.coocaatv.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||rpc-tc.skysrt.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||rpt-gdt.play.t002.ottcn.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||s.jpush.cn^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||sdk1xyajs.data.p2cdn.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||sis.jpush.io^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||sky.tvos.skysrt.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||skyworthdigital.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||skyworthiot.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||stats.jpush.cn^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||status.tvos.skysrt.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||status2.tvos.skysrt.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||sv.video.qq.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||taps.net^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||tq.skysrt.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||tracker.appadhoc.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||tvapp.hpplay.cn^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||tvos.skysrt.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||tx.ctrmi.cn^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||umengacs.m.taobao.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||uop.umeng.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||update01.skyworth-cloud.com.wswebpic.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||update01.skyworth-cloud.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||vqq.admaster.com.cn^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||webapp.skysrt.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||bak.bajintech.com^$important^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||iwd.skysrt.com^$important^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||ipv4only.arpa^$important^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||api.bajintech.com^$important^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||wifimodule.doubimeizhi.com^$important^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||msy59wz.mqtt.iot.gz.baidubce.com^$important^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||i.ytimg.com^$important^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;# 百家号&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;||baijiahao.baidu.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;@@||apisoft.df0535.com^&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">dhcp:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">interface_name:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">dhcpv4:</span></span><br><span class="line">    <span class="attr">gateway_ip:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">subnet_mask:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">range_start:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">range_end:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">lease_duration:</span> <span class="number">86400</span></span><br><span class="line">    <span class="attr">icmp_timeout_msec:</span> <span class="number">1000</span></span><br><span class="line">    <span class="attr">options:</span> [ ]</span><br><span class="line">  <span class="attr">dhcpv6:</span></span><br><span class="line">    <span class="attr">range_start:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">lease_duration:</span> <span class="number">86400</span></span><br><span class="line">    <span class="attr">ra_slaac_only:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">ra_allow_slaac:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">clients:</span> [ ]</span><br><span class="line"><span class="attr">log_compress:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">log_localtime:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">log_max_backups:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">log_max_size:</span> <span class="number">100</span></span><br><span class="line"><span class="attr">log_max_age:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">log_file:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">verbose:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">schema_version:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure></div>

<h3 id="OpenWrt关闭LED灯-暂未测试"><a href="#OpenWrt关闭LED灯-暂未测试" class="headerlink" title="OpenWrt关闭LED灯(暂未测试)"></a>OpenWrt关闭LED灯(暂未测试)</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ vim /etc/rc.d/S99turnoffled</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/ash</span></span><br><span class="line">for  i  in  ` ls  /sys/class/leds `</span><br><span class="line">do</span><br><span class="line">cd  /sys/class/leds</span><br><span class="line">cd  $i</span><br><span class="line">echo  0 &gt; brightness</span><br><span class="line">done</span><br></pre></td></tr></table></figure></div>

<h3 id="安装lsusb命令"><a href="#安装lsusb命令" class="headerlink" title="安装lsusb命令"></a>安装lsusb命令</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ opkg update</span><br><span class="line">$ opkg install usbutils</span><br></pre></td></tr></table></figure></div>

<h3 id="OpenWrt关闭OPKG检查签名"><a href="#OpenWrt关闭OPKG检查签名" class="headerlink" title="OpenWrt关闭OPKG检查签名"></a>OpenWrt关闭OPKG检查签名</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ vi /etc/opkg.conf</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 注释掉这一行</span><br><span class="line">#option check_signature</span><br></pre></td></tr></table></figure></div>

<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol>
<li>只有QSDK固件里面有CPU调速软件</li>
<li>QSDK网络好，OpenWrt插件多</li>
<li>信道36<del>48，149</del>161</li>
<li>…</li>
</ol>
<h3 id="相关项目"><a href="#相关项目" class="headerlink" title="相关项目"></a>相关项目</h3><p>除了文章中引用的项目，还有以下可能会用到的关联:</p>
<ol>
<li><a class="link"   href="https://www.right.com.cn/forum/thread-4377910-1-1.html" >AX9000和AX6000已经可以获取SSH了 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.bilibili.com/video/BV1fQ4y1R7LY/" >使用虚拟机解锁红米ax6-ssh并刷入qsdk固件 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://forum.openwrt.org/t/openwrt-support-for-xiaomi-ax9000/98908" >OpenWrt support for Xiaomi AX9000 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://xiaomifirmware.net/xiaomi-router-ax9000/" >Xiaomi router AX9000 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/xiangfeidexiaohuo/OpenWrt_Build" >OpenWrt_Build openwrt-autobuild <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://cyhour.com/1017/" >小米路由器修复工具  <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li></li>
<li></li>
<li></li>
</ol>
<p>END.</p>
]]></content>
      <categories>
        <category>Router</category>
      </categories>
      <tags>
        <tag>tittle-tattle</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派4B随记</title>
    <url>/2022/01/14/%E6%A0%91%E8%8E%93%E6%B4%BE4B%E9%9A%8F%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>记录一些树莓派4B的记录，使用的是<code>树莓派爱好者基地64位系统2.0正式版(Debian)</code>的系统。</p>
<h2 id="工具记录"><a href="#工具记录" class="headerlink" title="工具记录"></a>工具记录</h2><ol>
<li><a class="link"   href="https://www.raspberrypi.com/software/operating-systems/" >Raspberry Pi OS <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.sdcard.org/downloads/formatter/" >SDFormatter <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://sourceforge.net/projects/win32diskimager/" >win32diskimager <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.advanced-ip-scanner.com/cn/" >www.advanced-ip-scanner <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://github.com/openfans-community-offical/Debian-Pi-Aarch64/blob/master/README_zh.md" >Debian-Pi-Aarch64 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.balena.io/etcher/" >balenaEtcher <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ol>
<h2 id="基础设置"><a href="#基础设置" class="headerlink" title="基础设置"></a>基础设置</h2><h3 id="开启SSH"><a href="#开启SSH" class="headerlink" title="开启SSH"></a>开启SSH</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ new-item ssh -<span class="built_in">type</span> file</span><br></pre></td></tr></table></figure></div>

<h3 id="配置wifi连接文件"><a href="#配置wifi连接文件" class="headerlink" title="配置wifi连接文件"></a>配置wifi连接文件</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ vim wpa_supplicant.conf</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">country=CN</span><br><span class="line">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span><br><span class="line">update_config=1</span><br><span class="line"> </span><br><span class="line">network=&#123;</span><br><span class="line">ssid=&quot;909&quot;</span><br><span class="line">psk=&quot;1393877285&quot;</span><br><span class="line">key_mgmt=WPA-PSK</span><br><span class="line">priority=1</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">network=&#123;</span><br><span class="line">ssid=&quot;WiFi-B&quot;</span><br><span class="line">psk=&quot;12345678&quot;</span><br><span class="line">key_mgmt=WPA-PSK</span><br><span class="line">priority=2</span><br><span class="line">scan_ssid=1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#ssid:网络的ssid</span><br><span class="line">#psk:密码</span><br><span class="line">#priority:连接优先级，数字越大优先级越高（不可以是负数）</span><br><span class="line">#scan_ssid:连接隐藏WiFi时需要指定该值为1</span><br></pre></td></tr></table></figure></div>

<h2 id="编译安装python3-9-9"><a href="#编译安装python3-9-9" class="headerlink" title="编译安装python3.9.9"></a>编译安装python3.9.9</h2><h3 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt update</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt upgrade</span></span><br></pre></td></tr></table></figure></div>

<h3 id="安装环境依赖"><a href="#安装环境依赖" class="headerlink" title="安装环境依赖"></a>安装环境依赖</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt install build-essential libsqlite3-dev sqlite3 bzip2 libbz2-dev libffi-dev -y</span> </span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>注意如果没安装<code>libffi-dev</code>的话可能会出现<code>ModuleNotFoundError: No module named &#39;_ctypes&#39;</code>错误</p>
</blockquote>
<h3 id="下载-解压"><a href="#下载-解压" class="headerlink" title="下载&amp;解压"></a>下载&amp;解压</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">wget https://npm.taobao.org/mirrors/python/3.9.9/Python-3.9.9.tgz</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar zxvf Python-3.9.9.tgz</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> Python-3.9.9</span></span><br></pre></td></tr></table></figure></div>

<h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">--enable-optimizations(优化参数 自选)</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo ./configure --enable-optimizations</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo make</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo make install</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">等待完成检查</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ls</span> -al /usr/local/bin/python*</span></span><br></pre></td></tr></table></figure></div>

<h3 id="添加PIP-alias"><a href="#添加PIP-alias" class="headerlink" title="添加PIP alias"></a>添加PIP alias</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">alias pq3.9=&#x27;sudo pip3.9 install -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com&#x27;</span><br></pre></td></tr></table></figure></div>

<h3 id="替换默认Python"><a href="#替换默认Python" class="headerlink" title="替换默认Python"></a>替换默认Python</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">rm</span> /usr/bin/python</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">ln</span> -s /usr/bin/python3.9 /usr/bin/python</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">python</span></span><br></pre></td></tr></table></figure></div>

<h2 id="安装oh-my-zsh"><a href="#安装oh-my-zsh" class="headerlink" title="安装oh-my-zsh"></a>安装oh-my-zsh</h2><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://ghproxy.com/https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> https://ghproxy.com/https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> https://ghproxy.com/https://github.com/zsh-users/zsh-autosuggestions <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> https://ghproxy.com/https://github.com/zsh-users/zsh-completions <span class="variable">$&#123;ZSH_CUSTOM:=~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-completions</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> https://ghproxy.com/https://github.com/dracula/zsh.git <span class="variable">$&#123;ZSH_CUSTOM:=~/.oh-my-zsh/themes/</span></span></span><br></pre></td></tr></table></figure></div>

<h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>End</p>
]]></content>
      <categories>
        <category>Pi</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>4b</tag>
      </tags>
  </entry>
  <entry>
    <title>获取基于OpenWrite的博文密码</title>
    <url>/2022/01/14/%E8%8E%B7%E5%8F%96%E5%9F%BA%E4%BA%8EOpenWrite%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一些博文阅读到一半的时候，会有个阅读全文的按钮。<br>点击后需要你关注公众号，获取密码或暗号或验证码。<br>本文只针对 <code>该工具由 openwrite.cn 免费提供</code>相关的关键字。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><ul>
<li>右键查看网页源代码, 搜索<code>blogId</code>关键字。</li>
<li>获取到类似<code>1234-1612312341234-123</code>的值。</li>
<li>对接到以下请求进行获取即可。</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 格式</span><br><span class="line">https://my.openwrite.cn/code/generate?blogId=&#123;blogId&#125;</span><br><span class="line"></span><br><span class="line"># 例子</span><br><span class="line">https://my.openwrite.cn/code/generate?blogId=1234-1612312341234-123</span><br></pre></td></tr></table></figure></div>

<p>END.</p>
]]></content>
      <categories>
        <category>Router</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>OpenWrite</tag>
      </tags>
  </entry>
  <entry>
    <title>让Python多线程响应Ctrl+C</title>
    <url>/2018/09/23/%E8%AE%A9Python%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%93%8D%E5%BA%94Ctrl-C/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Python的<code>threading</code>模块，没有提供线程退出的方法。<br>如果程序多线程是死循环，即使CTRL+C也没有任何效果。</p>
<h2 id="响应方法"><a href="#响应方法" class="headerlink" title="响应方法"></a>响应方法</h2><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> thread_list:</span><br><span class="line">    <span class="comment"># 设置守护</span></span><br><span class="line">    t.setDaemon(<span class="literal">True</span>)</span><br><span class="line">    t.start()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 响应Ctrl+C</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></div>

<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p><code>setDaemon(True)</code>:，是把子线程设置为守护线程，主线程和子线程会同时运行，主线程结束运行后，无论子线程运行与否，都会和主线程一起结束。<br>所以我们结束空循环的时候，子线程也会退出。</p>
<p><code>join()</code>:join函数会使得主调线程阻塞，直到被调用线程运行结束或超时，才执行主线程。</p>
<blockquote>
<p>只需要设置守护线程，挂一个空循环就好了</p>
</blockquote>
<p>End.</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>threading</tag>
      </tags>
  </entry>
  <entry>
    <title>限制Docker容器上下行带宽</title>
    <url>/2024/04/15/%E9%99%90%E5%88%B6Docker%E5%AE%B9%E5%99%A8%E4%B8%8A%E4%B8%8B%E8%A1%8C%E5%B8%A6%E5%AE%BD/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在某些国内云服务器商，如果服务器带宽较小或者有Docker容器会跑满服务器带宽。<br>持续的高上下行，可能会收到一些服务器警告，或者怀疑被攻击而被封禁。<br>这个时候需要限制一些流量的进出带宽，以下针对Linux环境操作。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="安装WonderShaper"><a href="#安装WonderShaper" class="headerlink" title="安装WonderShaper"></a>安装WonderShaper</h3><p>WonderShaper是一个允许用户限制一个或多个网络适配器带宽的脚本，依赖于tc流量控制工具。</p>

  <div class="note p-4 mb-4 rounded-small warning">
    <p>以下命令都基于root权限执行，否则请使用sudo前缀执行。</p>

  </div>

<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拉取仓库</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/magnific0/wondershaper.git</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">测试</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> wondershaper &amp;&amp; ./wondershaper -h</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装到系统</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make install</span></span><br></pre></td></tr></table></figure></div>


  <div class="note p-4 mb-4 rounded-small warning">
    <p>注意一些服务器未安装tc流量控制工具，需要进行额外安装。</p>

  </div>

<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Centos 8</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">yum install -y iproute-tc</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Ubuntu</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">apt-get install iproute2</span></span><br></pre></td></tr></table></figure></div>

<h3 id="使用WonderShaper限流"><a href="#使用WonderShaper限流" class="headerlink" title="使用WonderShaper限流"></a>使用WonderShaper限流</h3><h4 id="查看需要的网卡名称"><a href="#查看需要的网卡名称" class="headerlink" title="查看需要的网卡名称"></a>查看需要的网卡名称</h4><blockquote>
<p>这里以docker的网卡为例，当然有需要限制其他网卡同理。</p>
</blockquote>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip addr</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ip addr show</span></span><br></pre></td></tr></table></figure></div>

<h4 id="设置网卡上下行"><a href="#设置网卡上下行" class="headerlink" title="设置网卡上下行"></a>设置网卡上下行</h4><blockquote>
<p><code>docker0</code>为网卡名称，<code>-d</code>为下行、<code>-u</code>为上行，单位为<code>Kbps</code></p>
</blockquote>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">限制docker0网卡为2M的上下行</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">wondershaper -a docker0 -d 2048 -u 2048</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">只限制下行</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">wondershaper -a docker0 -d 2048</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">只限制上行</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">wondershaper -a docker0 -u 2048</span></span><br></pre></td></tr></table></figure></div>

<h3 id="查看网卡状态"><a href="#查看网卡状态" class="headerlink" title="查看网卡状态"></a>查看网卡状态</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">wondershaper -s -a docker0</span></span><br></pre></td></tr></table></figure></div>

<h3 id="恢复网卡上下行限制"><a href="#恢复网卡上下行限制" class="headerlink" title="恢复网卡上下行限制"></a>恢复网卡上下行限制</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">wondershaper -c -a docker0</span></span><br></pre></td></tr></table></figure></div>

<h2 id="使用iftop查看限流状态"><a href="#使用iftop查看限流状态" class="headerlink" title="使用iftop查看限流状态"></a>使用iftop查看限流状态</h2><p>iftop是监控某个应用或网卡流量的工具。<br>这里只是为了方便终端查看。也有其他同类型的，比如nload、nethogs等等。</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><blockquote>
<p>这里仅以Centos为例</p>
</blockquote>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">yum install -y iftop</span></span><br></pre></td></tr></table></figure></div>

<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="显示本机所有进程的进出流量"><a href="#显示本机所有进程的进出流量" class="headerlink" title="显示本机所有进程的进出流量"></a>显示本机所有进程的进出流量</h4><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">iftop</span></span><br></pre></td></tr></table></figure></div>

<h4 id="查看指定网卡的进出流量"><a href="#查看指定网卡的进出流量" class="headerlink" title="查看指定网卡的进出流量"></a>查看指定网卡的进出流量</h4><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">iftop -i docker0</span></span><br></pre></td></tr></table></figure></div>

<h4 id="显示端口信息"><a href="#显示端口信息" class="headerlink" title="显示端口信息"></a>显示端口信息</h4><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">iftop -i docker0 -P</span></span><br></pre></td></tr></table></figure></div>

<h2 id="End"><a href="#End" class="headerlink" title="End"></a>End</h2><blockquote>
<p>其他工具: <a class="link"   href="https://hub.docker.com/r/lihaixin/vnstat" >vnstat <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<p>本环境是因为没有多余的容器，所以直接限制的docker0网卡不会影响到其他服务。</p>
<p>有其他单独需求，限制单个容器的虚拟网卡应该同理。</p>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
</search>
